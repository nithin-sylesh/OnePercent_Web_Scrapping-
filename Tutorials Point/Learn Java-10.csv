Course,Chapters,ALL Headings,Paragraphs,Unordered List Items,Ordered List Items,Tables,Code Examples
Learn Java-10,Java 10 Tutorial,Java 10 Tutorial@@@Audience@@@Prerequisites|||Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Java 10 is a major feature release of Java programming language. This is an introductory tutorial that explains the basic-to-advanced features of Java 10 and their usage in a simple and intuitive way.|||This tutorial is designed for Java programmers who would like to understand the Java 10 new features and actual usage.|||Before proceeding with this tutorial, you should have a good understanding of Java programming language.",,,,
Learn Java-10,Java 10 - Overview,Java 10 - Overview|||Oracle JDK vs OpenJDK@@@New Features@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Java 10 is a major release in Java release cadence and it was releasd on March 10, 2018. With Java 10, Oracle has changed the java release cadence to a new model, a 6 month release cadence and LTS model for Oracle Java SE products. LTS model stands for Long Term Support model.|||From Java 10 onwards, Oracle releases a new version of Java after every 6 month where each version contains one or two major features. Oracle uses a release train concept. Each release train is scheduled for 6 months. Features which are developed within this timeline are shipped in the release otherwise the features are moved to next release train.|||Most of the Oracle JDK binaries are propriety and licensed by Oracle and have multiple restrictions on redistribution. Whereas OpenJDK is more developer community friendly. From Java 10 onwards, Oracle has decided to promote OpenJDK as primary JDK to facility community based development of Java. Oracle will keep producing its own JDKs but it will release them after 3 years and term them as LTS version. So OpenJDK binaries will be released after every six month.|||OpenJDK is cloud and container friendly as it can freely distributed as part of the container. So Oracle's move to promote OpenJDK makes java more friendly towards cloud or container development and deployment.|||Java 9 and Java 10 are non-LTS release. Java 11 release is a LTS release.|||Following are the major new features which are introduced in Java 10.|||JEP 286 − Local Variable Type Inference|||JEP 322 − Time-Based Release Versioning|||JEP 304 − Garbage-Collector Interface|||JEP 307 − Parallel Full GC for G1|||JEP 316 − Heap Allocation on Alternative Memory Devices|||JEP 296 − Consolidate the JDK Forest into a Single Repository|||JEP 310 − Application Class-Data Sharing|||JEP 314 − Additional Unicode Language-Tag Extensions|||JEP 319 − Root Certificates|||JEP 317 − Experimental Java-Based JIT Compiler|||JEP 312 − Thread-Local Handshakes|||JEP 313 − Remove the Native-Header Generation Tool|||JEP 319 − Root Certificates|||JEP 319 − Root Certificates|||Java 10 enhanced 70+ APIs with new methods and options and removed deprecated APIs and options. We'll see these changes in next chapters.",JEP 286 − Local Variable Type Inference@@@JEP 322 − Time-Based Release Versioning@@@JEP 304 − Garbage-Collector Interface@@@JEP 307 − Parallel Full GC for G1@@@JEP 316 − Heap Allocation on Alternative Memory Devices@@@JEP 296 − Consolidate the JDK Forest into a Single Repository@@@JEP 310 − Application Class-Data Sharing@@@JEP 314 − Additional Unicode Language-Tag Extensions@@@JEP 319 − Root Certificates@@@JEP 317 − Experimental Java-Based JIT Compiler@@@JEP 312 − Thread-Local Handshakes@@@JEP 313 − Remove the Native-Header Generation Tool@@@JEP 319 − Root Certificates@@@JEP 319 − Root Certificates,,,
Learn Java-10,Java 10 - Environment Setup,"Java 10 - Environment Setup|||Live Demo Option Online@@@Local Environment Setup@@@Popular Java Editors@@@Useful Video Courses|||Setting Up the Path for Windows 2000/XP@@@Setting Up the Path for Windows 95/98/ME@@@Setting Up the Path for Linux, UNIX, Solaris, FreeBSD|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training","We have set up the Java Programming environment online, so that you can compile and execute all the available examples online. It gives you confidence in what you are reading and enables you to verify the programs with different options. Feel free to modify any example and execute it online.|||Try the following example using Live Demo option available at the top right corner of the below sample code box −|||For most of the examples given in this tutorial, you will find a Live Demo option in our website code sections at the top right corner that will take you to the online compiler. So just make use of it and enjoy your learning.|||If you want to set up your own environment for Java programming language, then this section guides you through the whole process. Please follow the steps given below to set up your Java environment.|||Java SE is available for download for free.  To download click here, please download a version compatible with your operating system.|||Follow the instructions to download Java, and run the .exe to install Java on your machine. Once you have installed Java on your machine, you would need to set environment variables to point to correct installation directories.|||Assuming you have installed Java in c:\Program Files\java\jdk directory −|||Right-click on 'My Computer' and select 'Properties'.|||Click on the 'Environment variables' button under the 'Advanced' tab.|||Now, edit the 'Path' variable and add the path to the Java executable directory at the end of it. For example, if the path is currently set to C:\Windows\System32, then edit it the following way|||C:\Windows\System32;c:\Program Files\java\jdk\bin.|||Assuming you have installed Java in c:\Program Files\java\jdk directory −|||Edit the 'C:\autoexec.bat' file and add the following line at the end −|||SET PATH=%PATH%;C:\Program Files\java\jdk\bin|||Environment variable PATH should be set to point to where the Java binaries have been installed. Refer to your shell documentation if you have trouble doing this.|||For example, if you use bash as your shell, then you would add the following line at the end of your .bashrc −|||export PATH=/path/to/java:$PATH'|||To write Java programs, you need a text editor. There are even more sophisticated IDEs available in the market. The most popular ones are briefly described below −|||Notepad − On Windows machine, you can use any simple text editor like Notepad (recommended for this tutorial) or WordPad.  Notepad++ is also a free text editor which enhanced facilities.|||Netbeans − It is a Java IDE that is open-source and free which can be downloaded from https://www.netbeans.org/index.html.|||Eclipse − It is also a Java IDE developed by the Eclipse open-source community and can be downloaded from https://www.eclipse.org/.|||IDE or Integrated Development Environment, provides all common tools and facilities to aid in programming, such as source code editor, build tools and debuggers etc.","Right-click on 'My Computer' and select 'Properties'.@@@Click on the 'Environment variables' button under the 'Advanced' tab.@@@Now, edit the 'Path' variable and add the path to the Java executable directory at the end of it. For example, if the path is currently set to C:\Windows\System32, then edit it the following way
C:\Windows\System32;c:\Program Files\java\jdk\bin.|||
Edit the 'C:\autoexec.bat' file and add the following line at the end −
SET PATH=%PATH%;C:\Program Files\java\jdk\bin
|||export PATH=/path/to/java:$PATH'|||Notepad − On Windows machine, you can use any simple text editor like Notepad (recommended for this tutorial) or WordPad.  Notepad++ is also a free text editor which enhanced facilities.@@@Netbeans − It is a Java IDE that is open-source and free which can be downloaded from https://www.netbeans.org/index.html.@@@Eclipse − It is also a Java IDE developed by the Eclipse open-source community and can be downloaded from https://www.eclipse.org/.",,,"public class MyFirstJavaProgram {   public static void main(String []args) {      System.out.println(""Hello World"");   }}"
Learn Java-10,Java 10 - Time Based Release Versioning,Java 10 - Time Based Release Versioning|||JEP 322 − Time-Based Release Versioning@@@Version Format@@@Useful Video Courses|||Example@@@Output|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"From Java 10 onwards, Oracle has introduced a strict time based release versioning model for Java releases. Now Java will have a major release after every six months. Java 10 was released in Mar,2018 and moving onwards, all major versions are planned to release in Mar and Sep months of coming years. Releases are further categoried into three broad categories.|||Feature Release − A Feature Release contains language specific features, JVM features, New/Improved APIs, Removal/Deprecation of APIs. Time of these feature releases is fixed and there is no constraint on features to be included in a particular release. If a under development feature is not a part of latest release then it will be planned in next release.|||Update Release − An Update Release includes bug fixes, security issue fix, regression fixes etc. Each update release is planned per quarter in Jan, April, July and Oct months. Each Feature release will receive two Update releases before next feature release is announced.|||Long Term Support(LTS) Release − Long term support release will be announced after every three years starting from Sep, 2018. Oracle will provide support and updates for this release for next three years. This release is primarily for Corporates using Java in production deployments.|||A version now follows the following format.|||Where|||$FEATURE − This number denotes the major feature release and will get incremented by 1 after every Feature Release. For Java 10 it is 10.|||$INTERIM − This number denotes any non-feature, non-update release which contains bug fixes and enhancements. This release is not having any incompatible changes, any API removal or change to standard API. A Feature release, will have this counter as 0.|||$UPDATE − This number denotes the Update release done after a Feature Release. For example, an update release of Java in Apr 2018 is JDK 10.0.1 and for July 2018 is JDK 10.0.2 and so on.|||$PATCH − This number denotes any emergency release incremented only in case an critical issue is to be promoted on emergent basis.|||Following Program shows the versioning details of JAVA 10.|||It will print the following output.","Feature Release − A Feature Release contains language specific features, JVM features, New/Improved APIs, Removal/Deprecation of APIs. Time of these feature releases is fixed and there is no constraint on features to be included in a particular release. If a under development feature is not a part of latest release then it will be planned in next release.@@@Update Release − An Update Release includes bug fixes, security issue fix, regression fixes etc. Each update release is planned per quarter in Jan, April, July and Oct months. Each Feature release will receive two Update releases before next feature release is announced.@@@Long Term Support(LTS) Release − Long term support release will be announced after every three years starting from Sep, 2018. Oracle will provide support and updates for this release for next three years. This release is primarily for Corporates using Java in production deployments.|||$FEATURE − This number denotes the major feature release and will get incremented by 1 after every Feature Release. For Java 10 it is 10.@@@$INTERIM − This number denotes any non-feature, non-update release which contains bug fixes and enhancements. This release is not having any incompatible changes, any API removal or change to standard API. A Feature release, will have this counter as 0.@@@$UPDATE − This number denotes the Update release done after a Feature Release. For example, an update release of Java in Apr 2018 is JDK 10.0.1 and for July 2018 is JDK 10.0.2 and so on.@@@$PATCH − This number denotes any emergency release incremented only in case an critical issue is to be promoted on emergent basis.",,,"public class Tester {   public static void main(String[] args) {      Runtime.Version version = Runtime.version();      System.out.printf("" feature: %s%n interim: %s%n update: %s%n patch: %s%n"",         version.feature(),          version.interim(),          version.update(),          version.patch());   }}"
Learn Java-10,Java 10 - Local Variable Type Inference,Java 10 - Local Variable Type Inference|||JEP 286 − Local Variable Type Inference@@@Old way of declaring local variable.@@@New Way of declaring local variable.@@@Noteworthy points@@@Useful Video Courses|||Example@@@Output|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Local Variable Type Inference is one of the most evident change to language available from Java 10 onwards. It allows to define a variable using var and without specifying the type of it. The compiler infers the type of the variable using the value provided. This type inference is restricted to local variables. |||Now compiler infers the type of name variable as String by inspecting the value provided.|||No type inference in case of member variable, method parameters, return values.|||Local variable should be initialized at time of declaration otherwise compiler will not be infer and will throw error.|||Local variable inference is available inside initialization block of loop statements.|||No runtime overhead. As compiler infers the type based on value provided, there is no performance loss.|||No dynamic type change. Once type of local variable is inferred it cannot be changed.|||Complex boilerplate code can be reduced using local variable type inference.|||Following Program shows the use of Local Variable Type Inference in JAVA 10.|||It will print the following output.","No type inference in case of member variable, method parameters, return values.@@@Local variable should be initialized at time of declaration otherwise compiler will not be infer and will throw error.@@@Local variable inference is available inside initialization block of loop statements.@@@No runtime overhead. As compiler infers the type based on value provided, there is no performance loss.@@@No dynamic type change. Once type of local variable is inferred it cannot be changed.@@@Complex boilerplate code can be reduced using local variable type inference.",,,"Map<Integer, String> mapNames = new HashMap<>();var mapNames1 = new HashMap<Integer, String>();|||import java.util.List;public class Tester {   public static void main(String[] args) {      var names = List.of(""Julie"", ""Robert"", ""Chris"", ""Joseph"");       for (var name : names) {         System.out.println(name);      }      System.out.println("""");      for (var i = 0; i < names.size(); i++) {         System.out.println(names.get(i));      }   }}"
Learn Java-10,Java 10 - New APIs & Options,Java 10 - New APIs & Options|||Optional.orElseThrow() Method@@@APIs to create Unmodifiable Collections@@@Disable JRE Last Usage Tracking@@@Hashed Password@@@javadoc Support for Multiple Stylesheets@@@javadoc Support for Overridding methods@@@javadoc Support for Summary@@@Useful Video Courses|||Example@@@Output|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"JDK 10 release has added 70+ new APIs and Options to Java library. Following are some of the important enhancements introduced.|||A new method orElseThrow() is available in java.util.Optional class which is now a preferred alternative for get() method.|||A new method copyOf() is available in List, Set and Map interfaces which can create new collection instances from existing one. Collector class has new methods toUnmodifiableList(), toUnmodifiableSet(), and toUnmodifiableMap() to get elements of a stream into an unmodifiable collection.|||A new flag is introduced jdk.disableLastUsageTracking which disables JRE last usage tracking for a running VM.|||The plain text passwords available in the jmxremote.password file are now being over-written with their SHA3-512 hash by the JMX agent.|||A new option is available to javadoc command as --add-stylesheet. This option supports use of multiple stylesheets in generated documentation.|||A new option is available to javadoc command as --overridden-methods=value. As many classes override inherited methods but do not change the specification. The --overridden-methods=value option allows to group these methods with other inherited methods, instead of documenting them again separately.|||A new inline tag, {@summary ...}, is available to specify the text to be used as the summary of the API description. By default, the summary of an API description is inferred from the first sentence.|||Following Program shows the use of some of the new APIs in JAVA 10.|||It will print the following output.",,,,"import java.util.List;import java.util.stream.Collectors;public class Tester {   public static void main(String[] args) {      var ids = List.of(1, 2, 3, 4, 5);       try {         // get an unmodifiable list         List<Integer> copyOfIds = List.copyOf(ids);         copyOfIds.add(6);	      } catch(UnsupportedOperationException e){         System.out.println(""Collection is not modifiable."");      }      try{         // get an unmodifiable list         List<Integer> evenNumbers = ids.stream()            .filter(i -> i % 2 == 0)            .collect(Collectors.toUnmodifiableList());;         evenNumbers.add(6);	      }catch(UnsupportedOperationException e){         System.out.println(""Collection is not modifiable."");      }   }}"
Learn Java-10,Java 10 - Removed Features & Options,Java 10 - Removed Features & Options|||Nimbus - existing code@@@Nimbus - new code@@@Aqua - existing code@@@Aqua - new code@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"JDK 10 release has removed several deprecated APIs, features and Options from Java library. Following is the relevant details.|||Unsupported LookAndFeels removed − Applications using Nimbus or Aqua LookAndFeels has to migrate to new syntax.|||Runtime.getLocalizedInputStream and getLocalizedOutputStream Methods removed − Runtime.getLocalizedInputStream and getLocalizedOutputStream Methods are no more available as they were part of an obsolete internationalization mechanism.|||RMI Server-Side Multiplex Protocol Support removed − RMI Server-Side Multiplex Protocol was disabled in Java 9 and is removed in Java 10.|||Common DOM APIs removed − com.sun.java.browser.plugin2.DOM, and sun.plugin.dom.DOMObject APIs have been removed. netscape.javascript.JSObject is available to modify the DOM.|||FlatProfiler removed − FlatProfiler was deprecated in Java 9 and is removed in Java 10.|||Obsolete -X Options removed − -Xoss, -Xsqnopause, -Xoptimize, -Xboundthreads, and -Xusealtsigs, obsolete Hotspot VM options are removed in java 10.|||HostServicesgetWebContext Method removed − HostServicesgetWebContext Method was deprecated in Java 9 and is removed in Java 10.|||T2K Rasterizer and ICU Layout Engine removed − T2K rasterizer and ICU layout engine have been removed from JavaFX.|||VP6/FXM/FLV Code removed − P6 video encoding format and FXM/FLV container support has been removed in JavaFX Media. H.264/AVC1 in the MP4 container or HTTP Live Streaming is to be used instead.|||Pre-1.2 SecurityManager Methods and Fields removed − The pre-1.2 deprecated java.lang.SecurityManager methods and fields(marked forRemoval=true) have been removed.|||policytool removed − The policytool security tool has been removed.|||Deprecated Classes in com.sun.security.auth.** removed|||Following deprecated classes are removed|||com.sun.security.auth.PolicyFile|||com.sun.security.auth.SolarisNumericGroupPrincipal|||com.sun.security.auth.SolarisNumericUserPrincipal|||com.sun.security.auth.SolarisPrincipal|||com.sun.security.auth.X500Principal|||com.sun.security.auth.module.SolarisLoginModule|||com.sun.security.auth.module.SolarisSystem|||Old(JDK 6, JDK 7, and JDK 8 Era) Standard Doclet removed − The old (JDK 6, JDK 7 and JDK 8 era) standard doclet, used to output HTML content, and are superseded by a replacement, has been removed.|||javah tool removed − The Native-Header Generation Tool, javah has been removed.|||Java Launcher's Data Model Options -d32 and -d64 removed. − The obsolete and deprecated selection options (-d32, -d64, -J-d32 and -J-d64) have been removed.","Unsupported LookAndFeels removed − Applications using Nimbus or Aqua LookAndFeels has to migrate to new syntax.|||Runtime.getLocalizedInputStream and getLocalizedOutputStream Methods removed − Runtime.getLocalizedInputStream and getLocalizedOutputStream Methods are no more available as they were part of an obsolete internationalization mechanism.@@@RMI Server-Side Multiplex Protocol Support removed − RMI Server-Side Multiplex Protocol was disabled in Java 9 and is removed in Java 10.@@@Common DOM APIs removed − com.sun.java.browser.plugin2.DOM, and sun.plugin.dom.DOMObject APIs have been removed. netscape.javascript.JSObject is available to modify the DOM.@@@FlatProfiler removed − FlatProfiler was deprecated in Java 9 and is removed in Java 10.@@@Obsolete -X Options removed − -Xoss, -Xsqnopause, -Xoptimize, -Xboundthreads, and -Xusealtsigs, obsolete Hotspot VM options are removed in java 10.@@@HostServicesgetWebContext Method removed − HostServicesgetWebContext Method was deprecated in Java 9 and is removed in Java 10.@@@T2K Rasterizer and ICU Layout Engine removed − T2K rasterizer and ICU layout engine have been removed from JavaFX.@@@VP6/FXM/FLV Code removed − P6 video encoding format and FXM/FLV container support has been removed in JavaFX Media. H.264/AVC1 in the MP4 container or HTTP Live Streaming is to be used instead.@@@Pre-1.2 SecurityManager Methods and Fields removed − The pre-1.2 deprecated java.lang.SecurityManager methods and fields(marked forRemoval=true) have been removed.@@@policytool removed − The policytool security tool has been removed.@@@Deprecated Classes in com.sun.security.auth.** removed
Following deprecated classes are removed

com.sun.security.auth.PolicyFile
com.sun.security.auth.SolarisNumericGroupPrincipal
com.sun.security.auth.SolarisNumericUserPrincipal
com.sun.security.auth.SolarisPrincipal
com.sun.security.auth.X500Principal
com.sun.security.auth.module.SolarisLoginModule
com.sun.security.auth.module.SolarisSystem

@@@com.sun.security.auth.PolicyFile@@@com.sun.security.auth.SolarisNumericGroupPrincipal@@@com.sun.security.auth.SolarisNumericUserPrincipal@@@com.sun.security.auth.SolarisPrincipal@@@com.sun.security.auth.X500Principal@@@com.sun.security.auth.module.SolarisLoginModule@@@com.sun.security.auth.module.SolarisSystem@@@Old(JDK 6, JDK 7, and JDK 8 Era) Standard Doclet removed − The old (JDK 6, JDK 7 and JDK 8 era) standard doclet, used to output HTML content, and are superseded by a replacement, has been removed.@@@javah tool removed − The Native-Header Generation Tool, javah has been removed.@@@Java Launcher's Data Model Options -d32 and -d64 removed. − The obsolete and deprecated selection options (-d32, -d64, -J-d32 and -J-d64) have been removed.|||com.sun.security.auth.PolicyFile@@@com.sun.security.auth.SolarisNumericGroupPrincipal@@@com.sun.security.auth.SolarisNumericUserPrincipal@@@com.sun.security.auth.SolarisPrincipal@@@com.sun.security.auth.X500Principal@@@com.sun.security.auth.module.SolarisLoginModule@@@com.sun.security.auth.module.SolarisSystem",,,
Learn Java-10,Java 10 - Deprecated Features & Options,Java 10 - Deprecated Features & Options|||Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"JDK 10 release has deprecated several APIs, features and Options from Java library. Following is the relevant details.|||SNMP Monitoring Support deprecated − jdk.snmp module supporting SNMP monitoring and management support for the JVM is now deprecated and is marked forRemoval=true.|||java.security classes deprecated − java.security.{Certificate, Identity, IdentityScope, Signer} classes are now deprecated and is marked forRemoval=true.|||javax.security.auth.Policy API forRemoval − The deprecated javax.security.auth.Policy is marked forRemoval=true.|||APIs marked for removal − Following APIs are also marked for removal in Java 10 release as there standalone implementations are readily available.|||java.activation|||java.corba|||java.se.ee (aggregator)|||java.transaction|||java.xml.bind|||java.xml.ws|||java.xml.ws.annotation","SNMP Monitoring Support deprecated − jdk.snmp module supporting SNMP monitoring and management support for the JVM is now deprecated and is marked forRemoval=true.@@@java.security classes deprecated − java.security.{Certificate, Identity, IdentityScope, Signer} classes are now deprecated and is marked forRemoval=true.@@@javax.security.auth.Policy API forRemoval − The deprecated javax.security.auth.Policy is marked forRemoval=true.@@@APIs marked for removal − Following APIs are also marked for removal in Java 10 release as there standalone implementations are readily available.

java.activation
java.corba
java.se.ee (aggregator)
java.transaction
java.xml.bind
java.xml.ws
java.xml.ws.annotation

@@@java.activation@@@java.corba@@@java.se.ee (aggregator)@@@java.transaction@@@java.xml.bind@@@java.xml.ws@@@java.xml.ws.annotation|||java.activation@@@java.corba@@@java.se.ee (aggregator)@@@java.transaction@@@java.xml.bind@@@java.xml.ws@@@java.xml.ws.annotation",,,
Learn Java-10,Java 10 - JIT Compiler,Java 10 - JIT Compiler|||JEP 317 − Experimental Java-Based JIT Compiler@@@Risks and Assumptions@@@Useful Video Courses|||Syntax|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"JIT compiler is written in C++ and is used to convert Java into Byte Code. Now Java 10 has option to enable an experimental Java based JIT compiler, Graal to be used instead of standard JIT compiler. Graal is using JVMCI, JVM Compiler Interface which was introduced in Java 9. Graal is available in Java 9 as well. With Java 10, we can enable Graal to test and debug the experimental JVM compiler.|||Graal compiler is a complete rewrite of C++ based earlier compiler and is targeted for Linux/x64 based platform. Graal was introduced in Java 9 as an alternative of JIT compiler presently in use. Graal is a plugin to JVM and can be dynamically plugged in. It supports polyglot language interpretation as well.|||As Graal is experimental and is subject to testing effort considering various Hotspots and jdk tests with various flag options. It may fail some benchmarks for performance as compared to standard JIT Ahead of Time compilers.",,,,
Learn Java-10,Java 10 - Class-Data sharing,Java 10 - Class-Data sharing|||JEP 310 − Application Class-Data Sharing@@@Process@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"When JVM starts it loads the classes in memory as a preliminary step. In case there are multiple jars having multiple classes, an evident lags appears for the first request. In serverless architecture, such a lag can delay the boot time which is a critical operation in such an architecture. Application class-data sharing concept helps in reducing the start up time of an application. Java has an existing CDS (Class-Data Sharing) feature. With Application class-data sharing, Java 10 allows to put application classes in a shared archive. This reduces the application startup and footprint by sharing a common class meta data across multiple java processes.|||Application Class data sharing is a 3 step process.|||Create a list of Classes to archive − Create a list welcome.lst of a class Greeting.java lying in welcome.jar using Java Launcher.|||Create AppCDS archive − Archive a list of classes to be used for Application class data sharing.|||Use AppCDS archive − Use AppCDS archive while using java launcher.",Create a list of Classes to archive − Create a list welcome.lst of a class Greeting.java lying in welcome.jar using Java Launcher.|||Create AppCDS archive − Archive a list of classes to be used for Application class data sharing.|||Use AppCDS archive − Use AppCDS archive while using java launcher.,,,
Learn Java-10,Java 10 - Enhanced Garbage Collection,Java 10 - Enhanced Garbage Collection|||JEP 304 - Garbage-Collector Interface@@@JEP 307 - Parallel Full GC for G1@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Before Java 10, GC (Garbage Collector) implementation components were scattered within code base and were not replaceable easily. With Java 10, Garbage-Collector interface is introduced so that alternative GC implementations can be plugged in. It also helps in isolating the code base from different garbage collection implementations.	This feature is part of JEP 304.|||Java 9 introduced G1 (Garbage First) garbage collector. G1 avoids full garbage collection but in case of concurrent threads look for collection and memory is not revived fast enough, user experience is impacted. With Java 10, now G1 will use a fall back Full Garbage Collection.|||With this change, G1 improves its worst-case latency by using a Full GC in parallel. At present, G1 uses a single threaded mark-sweep-compact algorithm. With JEP 307, a parallel thread will start mark-sweep-compact algorithm. Number of threads can be controlled using following option.",,,,
Learn Java-10,Java 10 - Locale Enhancements,Java 10 - Locale Enhancements|||JEP 314 - Unicode Language-Tag Extensions@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Java 7 introduced support for BCP 47 Language tags. But this unicode locale extensions was limited to calendar and numbers. With Java 10, java.util.Locale and related classes are updated to implement additional unicode extensions as specified in LDML specification. Following additional extensions are added.|||cu − Currency Types|||fw − First Day of a Week|||rg − Region Override|||tz − Time Zone|||Following APIs are updated.",cu − Currency Types@@@fw − First Day of a Week@@@rg − Region Override@@@tz − Time Zone,,,"java.text.DateFormat::get*Instancejava.text.DateFormatSymbols::getInstancejava.text.DecimalFormatSymbols::getInstancejava.text.NumberFormat::get*Instancejava.time.format.DateTimeFormatter::localizedByjava.time.format.DateTimeFormatterBuilder::getLocalizedDateTimePatternjava.time.format.DecimalStyle::ofjava.time.temporal.WeekFields::ofjava.util.Calendar::{getFirstDayOfWeek,getMinimalDaysInWeek}java.util.Currency::getInstancejava.util.Locale::getDisplayNamejava.util.spi.LocaleNameProvider"
Learn Java-10,Java 10 - Heap Allocation,Java 10 - Heap Allocation|||JEP 316 - Heap Allocation on Alternative Memory Devices@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"With this enhancement in Java 10, now user can specify an alternative memory device, like NV-DIMM to HotSpot VM to allocation the java heap space. User need to pass a path to the file system using a new option -XX:AllocateHeapAt.|||This option takes file path and do a memory mapping to achieve the desired result. Other heap flags like -Xmx, -Xms continue to work.",,,,
Learn Java-10,Java 10 - Consolidated JDK Forest,Java 10 - Consolidated JDK Forest|||JEP 296 - Consolidated JDK Forest as Single Repository@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"In JDK 9, there are eight module based directories termed as repos.|||root|||corba|||hotspot|||jaxp|||jaxws|||jdk|||langtools|||nashorn|||Code is organized like −|||Java 10 onwards, JDK forests are organized into single repository to streamline development. Now code in organized as - ",root@@@corba@@@hotspot@@@jaxp@@@jaxws@@@jdk@@@langtools@@@nashorn,,,
Learn Java-10,Java 10 - Root Certificate,Java 10 - Root Certificate|||JEP 319 - Root Certificates@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Cacerts store, prior to Java 10 is an empty set. It is required to contain a set of certificates which can be used to establish trust in certificates chain of various security protocols of vendors.|||OpenJDK builds are not having such certificates which is why critical security components like TLS didn't work in default build.|||Now as Oracle has open sourced the root certificates using Oracle JAVA SE Root CA program, OpenJDK builds can now have root certificates and thus can reduce the difference between OpenJDK and Oracle JDK.|||Oracle JAVA SE Root CA program issues the root certificates. Vendors who've signed the agreement, are included in the set of root certificates. The vendors who are not registered will be included in next release.",,,,
Learn Java-10,Java 10 - Thread-local Handshake,Java 10 - Thread-local Handshake|||JEP 312 - Thread-Local Handshakes@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"In JDK 10, a new option is introduced for JVM as -XX:ThreadLocalHandshakes. This options works only for x64 and SPARC based machines.|||This option is available to improve VM performance. It allows to make a callback on application threads without making a global VM safepoint. Thus allows JVM to stop an individual thread without stopping all threads.|||As this options is not available to all platforms, other platforms will fall back to normal safepoints.",,,,
Learn Java-10,Java Tutorial,Java Tutorial|||Why to Learn java Programming?@@@Hello World using Java Programming.@@@Applications of Java Programming@@@Audience@@@Prerequisites@@@Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Java is a high-level programming language originally developed by Sun Microsystems and released in 1995. Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX. This tutorial gives a complete understanding of Java. This reference will take you through simple and practical approaches while learning Java Programming language.|||Java is a MUST for students and working professionals to become a great Software Engineer specially when they are working in Software Development Domain. I will list down some of the key advantages of learning Java Programming:|||Object Oriented − In Java, everything is an Object. Java can be easily extended since it is based on the Object model.|||Platform Independent − Unlike many other programming languages including C and C++, when Java is compiled, it is not compiled into platform specific machine, rather into platform independent byte code. This byte code is distributed over the web and interpreted by the Virtual Machine (JVM) on whichever platform it is being run on.|||Simple − Java is designed to be easy to learn. If you understand the basic concept of OOP Java, it would be easy to master.|||Secure − With Java's secure feature it enables to develop virus-free, tamper-free systems. Authentication techniques are based on public-key encryption.|||Architecture-neutral − Java compiler generates an architecture-neutral object file format, which makes the compiled code executable on many processors, with the presence of Java runtime system.|||Portable − Being architecture-neutral and having no implementation dependent aspects of the specification makes Java portable. Compiler in Java is written in ANSI C with a clean portability boundary, which is a POSIX subset.|||Robust − Java makes an effort to eliminate error prone situations by emphasizing mainly on compile time error checking and runtime checking.|||Just to give you a little excitement about Java programming, I'm going to give you a small conventional C Programming Hello World program, You can try it using Demo link.|||The latest release of the Java Standard Edition is Java SE 8. With the advancement of Java and its widespread popularity, multiple configurations were built to suit various types of platforms. For example: J2EE for Enterprise Applications, J2ME for Mobile Applications.|||The new J2 versions were renamed as Java SE, Java EE, and Java ME respectively. Java is guaranteed to be Write Once, Run Anywhere.|||Multithreaded − With Java's multithreaded feature it is possible to write programs that can perform many tasks simultaneously. This design feature allows the developers to construct interactive applications that can run smoothly.|||Interpreted − Java byte code is translated on the fly to native machine instructions and is not stored anywhere. The development process is more rapid and analytical since the linking is an incremental and light-weight process.|||High Performance − With the use of Just-In-Time compilers, Java enables high performance.|||Distributed − Java is designed for the distributed environment of the internet.|||Dynamic − Java is considered to be more dynamic than C or C++ since it is designed to adapt to an evolving environment. Java programs can carry extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.|||This tutorial has been prepared for the beginners to help them understand the basic to advanced concepts related to Java Programming language.|||Before you start practicing various types of examples given in this reference, we assume that you are already aware about computer programs and computer programming languages.","Object Oriented − In Java, everything is an Object. Java can be easily extended since it is based on the Object model.@@@Platform Independent − Unlike many other programming languages including C and C++, when Java is compiled, it is not compiled into platform specific machine, rather into platform independent byte code. This byte code is distributed over the web and interpreted by the Virtual Machine (JVM) on whichever platform it is being run on.@@@Simple − Java is designed to be easy to learn. If you understand the basic concept of OOP Java, it would be easy to master.@@@Secure − With Java's secure feature it enables to develop virus-free, tamper-free systems. Authentication techniques are based on public-key encryption.@@@Architecture-neutral − Java compiler generates an architecture-neutral object file format, which makes the compiled code executable on many processors, with the presence of Java runtime system.@@@Portable − Being architecture-neutral and having no implementation dependent aspects of the specification makes Java portable. Compiler in Java is written in ANSI C with a clean portability boundary, which is a POSIX subset.@@@Robust − Java makes an effort to eliminate error prone situations by emphasizing mainly on compile time error checking and runtime checking.|||Multithreaded − With Java's multithreaded feature it is possible to write programs that can perform many tasks simultaneously. This design feature allows the developers to construct interactive applications that can run smoothly.@@@Interpreted − Java byte code is translated on the fly to native machine instructions and is not stored anywhere. The development process is more rapid and analytical since the linking is an incremental and light-weight process.@@@High Performance − With the use of Just-In-Time compilers, Java enables high performance.@@@Distributed − Java is designed for the distributed environment of the internet.@@@Dynamic − Java is considered to be more dynamic than C or C++ since it is designed to adapt to an evolving environment. Java programs can carry extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.",,,"public class MyFirstJavaProgram {   /* This is my first java program.    * This will print 'Hello World' as the output    */   public static void main(String []args) {      System.out.println(""Hello World""); // prints Hello World   }}"
Learn Java-10,Java8 Tutorial,Java8 Tutorial@@@Audience@@@Prerequisites|||Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Java 8 is the most awaited and is a major feature release of Java programming language. This is an introductory tutorial that explains the basic-to-advanced features of Java 8 and their usage in a simple and intuitive way.|||This tutorial will be useful for most Java developers, starting from beginners to experts. After completing this tutorial, you will find yourself at a moderate level of expertise in Java 8, from where you can take yourself to next levels.|||Knowledge of basic Java programming language is the only prerequisite for learning the concepts explained in this tutorial.",,,,
Learn Java-10,Java 9 Tutorial,Java 9 Tutorial@@@Audience@@@Prerequisites|||Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,"Java 9 is the most awaited and is a major feature release of Java programming language. This is an introductory tutorial that explains the basic-to-advanced features of Java 9 and their usage in a simple and intuitive way.|||This tutorial will be useful for most Java developers, starting from beginners to experts. After completing this tutorial, you will find yourself at a moderate level of expertise in Java 9, from where you can take yourself to next levels.|||Knowledge of basic Java programming language is the only prerequisite for learning the concepts explained in this tutorial.",,,,
Learn Java-10,Java 10 - Quick Guide,"Java 10 - Quick Guide@@@Java 10 - Overview@@@Java 10 - Environment Setup@@@Java 10 - Time Based Release Versioning@@@Java 10 - Local Variable Type Inference@@@Java 10 - New APIs & Options@@@Java 10 - Removed Features & Options@@@Java 10 - Deprecated Features & Options@@@Java 10 - JIT Compiler@@@Java 10 - Class-Data sharing@@@Java 10 - Enhanced Garbage Collection@@@Java 10 - Locale Enhancements@@@Java 10 - Heap Allocation@@@Java 10 - Consolidated JDK Forest@@@Java 10 - Root Certificate@@@Java 10 - Thread-local Handshake|||Oracle JDK vs OpenJDK@@@New Features@@@Live Demo Option Online@@@Local Environment Setup@@@Popular Java Editors@@@Version Format@@@JEP 286 − Local Variable Type Inference@@@Old way of declaring local variable.@@@New Way of declaring local variable.@@@Noteworthy points@@@Optional.orElseThrow() Method@@@APIs to create Unmodifiable Collections@@@Disable JRE Last Usage Tracking@@@Hashed Password@@@javadoc Support for Multiple Stylesheets@@@javadoc Support for Overridding methods@@@javadoc Support for Summary@@@Nimbus - existing code@@@Nimbus - new code@@@Aqua - existing code@@@Aqua - new code@@@JEP 317 − Experimental Java-Based JIT Compiler@@@Risks and Assumptions@@@JEP 310 − Application Class-Data Sharing@@@Process@@@JEP 304 - Garbage-Collector Interface@@@JEP 307 - Parallel Full GC for G1@@@JEP 314 - Unicode Language-Tag Extensions@@@JEP 316 - Heap Allocation on Alternative Memory Devices@@@JEP 296 - Consolidated JDK Forest as Single Repository@@@JEP 319 - Root Certificates@@@JEP 312 - Thread-Local Handshakes@@@Useful Video Courses|||Setting Up the Path for Windows 2000/XP@@@Setting Up the Path for Windows 95/98/ME@@@Setting Up the Path for Linux, UNIX, Solaris, FreeBSD@@@Example@@@Output@@@Example@@@Output@@@Example@@@Output@@@Syntax|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training","Java 10 is a major release in Java release cadence and it was releasd on March 10, 2018. With Java 10, Oracle has changed the java release cadence to a new model, a 6 month release cadence and LTS model for Oracle Java SE products. LTS model stands for Long Term Support model.|||From Java 10 onwards, Oracle releases a new version of Java after every 6 month where each version contains one or two major features. Oracle uses a release train concept. Each release train is scheduled for 6 months. Features which are developed within this timeline are shipped in the release otherwise the features are moved to next release train.|||Most of the Oracle JDK binaries are propriety and licensed by Oracle and have multiple restrictions on redistribution. Whereas OpenJDK is more developer community friendly. From Java 10 onwards, Oracle has decided to promote OpenJDK as primary JDK to facility community based development of Java. Oracle will keep producing its own JDKs but it will release them after 3 years and term them as LTS version. So OpenJDK binaries will be released after every six month.|||OpenJDK is cloud and container friendly as it can freely distributed as part of the container. So Oracle's move to promote OpenJDK makes java more friendly towards cloud or container development and deployment.|||Java 9 and Java 10 are non-LTS release. Java 11 release is a LTS release.|||Following are the major new features which are introduced in Java 10.|||JEP 286 − Local Variable Type Inference|||JEP 322 − Time-Based Release Versioning|||JEP 304 − Garbage-Collector Interface|||JEP 307 − Parallel Full GC for G1|||JEP 316 − Heap Allocation on Alternative Memory Devices|||JEP 296 − Consolidate the JDK Forest into a Single Repository|||JEP 310 − Application Class-Data Sharing|||JEP 314 − Additional Unicode Language-Tag Extensions|||JEP 319 − Root Certificates|||JEP 317 − Experimental Java-Based JIT Compiler|||JEP 312 − Thread-Local Handshakes|||JEP 313 − Remove the Native-Header Generation Tool|||JEP 319 − Root Certificates|||JEP 319 − Root Certificates|||Java 10 enhanced 70+ APIs with new methods and options and removed deprecated APIs and options. We'll see these changes in next chapters.|||We have set up the Java Programming environment online, so that you can compile and execute all the available examples online. It gives you confidence in what you are reading and enables you to verify the programs with different options. Feel free to modify any example and execute it online.|||Try the following example using Live Demo option available at the top right corner of the below sample code box −|||For most of the examples given in this tutorial, you will find a Live Demo option in our website code sections at the top right corner that will take you to the online compiler. So just make use of it and enjoy your learning.|||If you want to set up your own environment for Java programming language, then this section guides you through the whole process. Please follow the steps given below to set up your Java environment.|||Java SE is available for download for free.  To download click here, please download a version compatible with your operating system.|||Follow the instructions to download Java, and run the .exe to install Java on your machine. Once you have installed Java on your machine, you would need to set environment variables to point to correct installation directories.|||Assuming you have installed Java in c:\Program Files\java\jdk directory −|||Right-click on 'My Computer' and select 'Properties'.|||Click on the 'Environment variables' button under the 'Advanced' tab.|||Now, edit the 'Path' variable and add the path to the Java executable directory at the end of it. For example, if the path is currently set to C:\Windows\System32, then edit it the following way|||C:\Windows\System32;c:\Program Files\java\jdk\bin.|||Assuming you have installed Java in c:\Program Files\java\jdk directory −|||Edit the 'C:\autoexec.bat' file and add the following line at the end −|||SET PATH=%PATH%;C:\Program Files\java\jdk\bin|||Environment variable PATH should be set to point to where the Java binaries have been installed. Refer to your shell documentation if you have trouble doing this.|||For example, if you use bash as your shell, then you would add the following line at the end of your .bashrc −|||export PATH=/path/to/java:$PATH'|||To write Java programs, you need a text editor. There are even more sophisticated IDEs available in the market. The most popular ones are briefly described below −|||Notepad − On Windows machine, you can use any simple text editor like Notepad (recommended for this tutorial) or WordPad.  Notepad++ is also a free text editor which enhanced facilities.|||Netbeans − It is a Java IDE that is open-source and free which can be downloaded from https://www.netbeans.org/index.html.|||Eclipse − It is also a Java IDE developed by the Eclipse open-source community and can be downloaded from https://www.eclipse.org/.|||IDE or Integrated Development Environment, provides all common tools and facilities to aid in programming, such as source code editor, build tools and debuggers etc.|||From Java 10 onwards, Oracle has introduced a strict time based release versioning model for Java releases. Now Java will have a major release after every six months. Java 10 was released in Mar,2018 and moving onwards, all major versions are planned to release in Mar and Sep months of coming years. Releases are further categoried into three broad categories.|||Feature Release − A Feature Release contains language specific features, JVM features, New/Improved APIs, Removal/Deprecation of APIs. Time of these feature releases is fixed and there is no constraint on features to be included in a particular release. If a under development feature is not a part of latest release then it will be planned in next release.|||Update Release − An Update Release includes bug fixes, security issue fix, regression fixes etc. Each update release is planned per quarter in Jan, April, July and Oct months. Each Feature release will receive two Update releases before next feature release is announced.|||Long Term Support(LTS) Release − Long term support release will be announced after every three years starting from Sep, 2018. Oracle will provide support and updates for this release for next three years. This release is primarily for Corporates using Java in production deployments.|||A version now follows the following format.|||Where|||$FEATURE − This number denotes the major feature release and will get incremented by 1 after every Feature Release. For Java 10 it is 10.|||$INTERIM − This number denotes any non-feature, non-update release which contains bug fixes and enhancements. This release is not having any incompatible changes, any API removal or change to standard API. A Feature release, will have this counter as 0.|||$UPDATE − This number denotes the Update release done after a Feature Release. For example, an update release of Java in Apr 2018 is JDK 10.0.1 and for July 2018 is JDK 10.0.2 and so on.|||$PATCH − This number denotes any emergency release incremented only in case an critical issue is to be promoted on emergent basis.|||Following Program shows the versioning details of JAVA 10.|||It will print the following output.|||Local Variable Type Inference is one of the most evident change to language available from Java 10 onwards. It allows to define a variable using var and without specifying the type of it. The compiler infers the type of the variable using the value provided. This type inference is restricted to local variables. |||Now compiler infers the type of name variable as String by inspecting the value provided.|||No type inference in case of member variable, method parameters, return values.|||Local variable should be initialized at time of declaration otherwise compiler will not be infer and will throw error.|||Local variable inference is available inside initialization block of loop statements.|||No runtime overhead. As compiler infers the type based on value provided, there is no performance loss.|||No dynamic type change. Once type of local variable is inferred it cannot be changed.|||Complex boilerplate code can be reduced using local variable type inference.|||Following Program shows the use of Local Variable Type Inference in JAVA 10.|||It will print the following output.|||JDK 10 release has added 70+ new APIs and Options to Java library. Following are some of the important enhancements introduced.|||A new method orElseThrow() is available in java.util.Optional class which is now a preferred alternative for get() method.|||A new method copyOf() is available in List, Set and Map interfaces which can create new collection instances from existing one. Collector class has new methods toUnmodifiableList(), toUnmodifiableSet(), and toUnmodifiableMap() to get elements of a stream into an unmodifiable collection.|||A new flag is introduced jdk.disableLastUsageTracking which disables JRE last usage tracking for a running VM.|||The plain text passwords available in the jmxremote.password file are now being over-written with their SHA3-512 hash by the JMX agent.|||A new option is available to javadoc command as --add-stylesheet. This option supports use of multiple stylesheets in generated documentation.|||A new option is available to javadoc command as --overridden-methods=value. As many classes override inherited methods but do not change the specification. The --overridden-methods=value option allows to group these methods with other inherited methods, instead of documenting them again separately.|||A new inline tag, {@summary ...}, is available to specify the text to be used as the summary of the API description. By default, the summary of an API description is inferred from the first sentence.|||Following Program shows the use of some of the new APIs in JAVA 10.|||It will print the following output.|||JDK 10 release has removed several deprecated APIs, features and Options from Java library. Following is the relevant details.|||Unsupported LookAndFeels removed − Applications using Nimbus or Aqua LookAndFeels has to migrate to new syntax.|||Runtime.getLocalizedInputStream and getLocalizedOutputStream Methods removed − Runtime.getLocalizedInputStream and getLocalizedOutputStream Methods are no more available as they were part of an obsolete internationalization mechanism.|||RMI Server-Side Multiplex Protocol Support removed − RMI Server-Side Multiplex Protocol was disabled in Java 9 and is removed in Java 10.|||Common DOM APIs removed − com.sun.java.browser.plugin2.DOM, and sun.plugin.dom.DOMObject APIs have been removed. netscape.javascript.JSObject is available to modify the DOM.|||FlatProfiler removed − FlatProfiler was deprecated in Java 9 and is removed in Java 10.|||Obsolete -X Options removed − -Xoss, -Xsqnopause, -Xoptimize, -Xboundthreads, and -Xusealtsigs, obsolete Hotspot VM options are removed in java 10.|||HostServicesgetWebContext Method removed − HostServicesgetWebContext Method was deprecated in Java 9 and is removed in Java 10.|||T2K Rasterizer and ICU Layout Engine removed − T2K rasterizer and ICU layout engine have been removed from JavaFX.|||VP6/FXM/FLV Code removed − P6 video encoding format and FXM/FLV container support has been removed in JavaFX Media. H.264/AVC1 in the MP4 container or HTTP Live Streaming is to be used instead.|||Pre-1.2 SecurityManager Methods and Fields removed − The pre-1.2 deprecated java.lang.SecurityManager methods and fields(marked forRemoval=true) have been removed.|||policytool removed − The policytool security tool has been removed.|||Deprecated Classes in com.sun.security.auth.** removed|||Following deprecated classes are removed|||com.sun.security.auth.PolicyFile|||com.sun.security.auth.SolarisNumericGroupPrincipal|||com.sun.security.auth.SolarisNumericUserPrincipal|||com.sun.security.auth.SolarisPrincipal|||com.sun.security.auth.X500Principal|||com.sun.security.auth.module.SolarisLoginModule|||com.sun.security.auth.module.SolarisSystem|||Old(JDK 6, JDK 7, and JDK 8 Era) Standard Doclet removed − The old (JDK 6, JDK 7 and JDK 8 era) standard doclet, used to output HTML content, and are superseded by a replacement, has been removed.|||javah tool removed − The Native-Header Generation Tool, javah has been removed.|||Java Launcher's Data Model Options -d32 and -d64 removed. − The obsolete and deprecated selection options (-d32, -d64, -J-d32 and -J-d64) have been removed.|||JDK 10 release has deprecated several APIs, features and Options from Java library. Following is the relevant details.|||SNMP Monitoring Support deprecated − jdk.snmp module supporting SNMP monitoring and management support for the JVM is now deprecated and is marked forRemoval=true.|||java.security classes deprecated − java.security.{Certificate, Identity, IdentityScope, Signer} classes are now deprecated and is marked forRemoval=true.|||javax.security.auth.Policy API forRemoval − The deprecated javax.security.auth.Policy is marked forRemoval=true.|||APIs marked for removal − Following APIs are also marked for removal in Java 10 release as there standalone implementations are readily available.|||java.activation|||java.corba|||java.se.ee (aggregator)|||java.transaction|||java.xml.bind|||java.xml.ws|||java.xml.ws.annotation|||JIT compiler is written in C++ and is used to convert Java into Byte Code. Now Java 10 has option to enable an experimental Java based JIT compiler, Graal to be used instead of standard JIT compiler. Graal is using JVMCI, JVM Compiler Interface which was introduced in Java 9. Graal is available in Java 9 as well. With Java 10, we can enable Graal to test and debug the experimental JVM compiler.|||Graal compiler is a complete rewrite of C++ based earlier compiler and is targeted for Linux/x64 based platform. Graal was introduced in Java 9 as an alternative of JIT compiler presently in use. Graal is a plugin to JVM and can be dynamically plugged in. It supports polyglot language interpretation as well.|||As Graal is experimental and is subject to testing effort considering various Hotspots and jdk tests with various flag options. It may fail some benchmarks for performance as compared to standard JIT Ahead of Time compilers.|||When JVM starts it loads the classes in memory as a preliminary step. In case there are multiple jars having multiple classes, an evident lags appears for the first request. In serverless architecture, such a lag can delay the boot time which is a critical operation in such an architecture. Application class-data sharing concept helps in reducing the start up time of an application. Java has an existing CDS (Class-Data Sharing) feature. With Application class-data sharing, Java 10 allows to put application classes in a shared archive. This reduces the application startup and footprint by sharing a common class meta data across multiple java processes.|||Application Class data sharing is a 3 step process.|||Create a list of Classes to archive − Create a list welcome.lst of a class Greeting.java lying in welcome.jar using Java Launcher.|||Create AppCDS archive − Archive a list of classes to be used for Application class data sharing.|||Use AppCDS archive − Use AppCDS archive while using java launcher.|||Before Java 10, GC (Garbage Collector) implementation components were scattered within code base and were not replaceable easily. With Java 10, Garbage-Collector interface is introduced so that alternative GC implementations can be plugged in. It also helps in isolating the code base from different garbage collection implementations.	This feature is part of JEP 304.|||Java 9 introduced G1 (Garbage First) garbage collector. G1 avoids full garbage collection but in case of concurrent threads look for collection and memory is not revived fast enough, user experience is impacted. With Java 10, now G1 will use a fall back Full Garbage Collection.|||With this change, G1 improves its worst-case latency by using a Full GC in parallel. At present, G1 uses a single threaded mark-sweep-compact algorithm. With JEP 307, a parallel thread will start mark-sweep-compact algorithm. Number of threads can be controlled using following option.|||Java 7 introduced support for BCP 47 Language tags. But this unicode locale extensions was limited to calendar and numbers. With Java 10, java.util.Locale and related classes are updated to implement additional unicode extensions as specified in LDML specification. Following additional extensions are added.|||cu − Currency Types|||fw − First Day of a Week|||rg − Region Override|||tz − Time Zone|||Following APIs are updated.|||With this enhancement in Java 10, now user can specify an alternative memory device, like NV-DIMM to HotSpot VM to allocation the java heap space. User need to pass a path to the file system using a new option -XX:AllocateHeapAt.|||This option takes file path and do a memory mapping to achieve the desired result. Other heap flags like -Xmx, -Xms continue to work.|||In JDK 9, there are eight module based directories termed as repos.|||root|||corba|||hotspot|||jaxp|||jaxws|||jdk|||langtools|||nashorn|||Code is organized like −|||Java 10 onwards, JDK forests are organized into single repository to streamline development. Now code in organized as - |||Cacerts store, prior to Java 10 is an empty set. It is required to contain a set of certificates which can be used to establish trust in certificates chain of various security protocols of vendors.|||OpenJDK builds are not having such certificates which is why critical security components like TLS didn't work in default build.|||Now as Oracle has open sourced the root certificates using Oracle JAVA SE Root CA program, OpenJDK builds can now have root certificates and thus can reduce the difference between OpenJDK and Oracle JDK.|||Oracle JAVA SE Root CA program issues the root certificates. Vendors who've signed the agreement, are included in the set of root certificates. The vendors who are not registered will be included in next release.|||In JDK 10, a new option is introduced for JVM as -XX:ThreadLocalHandshakes. This options works only for x64 and SPARC based machines.|||This option is available to improve VM performance. It allows to make a callback on application threads without making a global VM safepoint. Thus allows JVM to stop an individual thread without stopping all threads.|||As this options is not available to all platforms, other platforms will fall back to normal safepoints.","JEP 286 − Local Variable Type Inference@@@JEP 322 − Time-Based Release Versioning@@@JEP 304 − Garbage-Collector Interface@@@JEP 307 − Parallel Full GC for G1@@@JEP 316 − Heap Allocation on Alternative Memory Devices@@@JEP 296 − Consolidate the JDK Forest into a Single Repository@@@JEP 310 − Application Class-Data Sharing@@@JEP 314 − Additional Unicode Language-Tag Extensions@@@JEP 319 − Root Certificates@@@JEP 317 − Experimental Java-Based JIT Compiler@@@JEP 312 − Thread-Local Handshakes@@@JEP 313 − Remove the Native-Header Generation Tool@@@JEP 319 − Root Certificates@@@JEP 319 − Root Certificates|||Right-click on 'My Computer' and select 'Properties'.@@@Click on the 'Environment variables' button under the 'Advanced' tab.@@@Now, edit the 'Path' variable and add the path to the Java executable directory at the end of it. For example, if the path is currently set to C:\Windows\System32, then edit it the following way
C:\Windows\System32;c:\Program Files\java\jdk\bin.|||
Edit the 'C:\autoexec.bat' file and add the following line at the end −
SET PATH=%PATH%;C:\Program Files\java\jdk\bin
|||export PATH=/path/to/java:$PATH'|||Notepad − On Windows machine, you can use any simple text editor like Notepad (recommended for this tutorial) or WordPad.  Notepad++ is also a free text editor which enhanced facilities.@@@Netbeans − It is a Java IDE that is open-source and free which can be downloaded from https://www.netbeans.org/index.html.@@@Eclipse − It is also a Java IDE developed by the Eclipse open-source community and can be downloaded from https://www.eclipse.org/.|||Feature Release − A Feature Release contains language specific features, JVM features, New/Improved APIs, Removal/Deprecation of APIs. Time of these feature releases is fixed and there is no constraint on features to be included in a particular release. If a under development feature is not a part of latest release then it will be planned in next release.@@@Update Release − An Update Release includes bug fixes, security issue fix, regression fixes etc. Each update release is planned per quarter in Jan, April, July and Oct months. Each Feature release will receive two Update releases before next feature release is announced.@@@Long Term Support(LTS) Release − Long term support release will be announced after every three years starting from Sep, 2018. Oracle will provide support and updates for this release for next three years. This release is primarily for Corporates using Java in production deployments.|||$FEATURE − This number denotes the major feature release and will get incremented by 1 after every Feature Release. For Java 10 it is 10.@@@$INTERIM − This number denotes any non-feature, non-update release which contains bug fixes and enhancements. This release is not having any incompatible changes, any API removal or change to standard API. A Feature release, will have this counter as 0.@@@$UPDATE − This number denotes the Update release done after a Feature Release. For example, an update release of Java in Apr 2018 is JDK 10.0.1 and for July 2018 is JDK 10.0.2 and so on.@@@$PATCH − This number denotes any emergency release incremented only in case an critical issue is to be promoted on emergent basis.|||No type inference in case of member variable, method parameters, return values.@@@Local variable should be initialized at time of declaration otherwise compiler will not be infer and will throw error.@@@Local variable inference is available inside initialization block of loop statements.@@@No runtime overhead. As compiler infers the type based on value provided, there is no performance loss.@@@No dynamic type change. Once type of local variable is inferred it cannot be changed.@@@Complex boilerplate code can be reduced using local variable type inference.|||Unsupported LookAndFeels removed − Applications using Nimbus or Aqua LookAndFeels has to migrate to new syntax.|||Runtime.getLocalizedInputStream and getLocalizedOutputStream Methods removed − Runtime.getLocalizedInputStream and getLocalizedOutputStream Methods are no more available as they were part of an obsolete internationalization mechanism.@@@RMI Server-Side Multiplex Protocol Support removed − RMI Server-Side Multiplex Protocol was disabled in Java 9 and is removed in Java 10.@@@Common DOM APIs removed − com.sun.java.browser.plugin2.DOM, and sun.plugin.dom.DOMObject APIs have been removed. netscape.javascript.JSObject is available to modify the DOM.@@@FlatProfiler removed − FlatProfiler was deprecated in Java 9 and is removed in Java 10.@@@Obsolete -X Options removed − -Xoss, -Xsqnopause, -Xoptimize, -Xboundthreads, and -Xusealtsigs, obsolete Hotspot VM options are removed in java 10.@@@HostServicesgetWebContext Method removed − HostServicesgetWebContext Method was deprecated in Java 9 and is removed in Java 10.@@@T2K Rasterizer and ICU Layout Engine removed − T2K rasterizer and ICU layout engine have been removed from JavaFX.@@@VP6/FXM/FLV Code removed − P6 video encoding format and FXM/FLV container support has been removed in JavaFX Media. H.264/AVC1 in the MP4 container or HTTP Live Streaming is to be used instead.@@@Pre-1.2 SecurityManager Methods and Fields removed − The pre-1.2 deprecated java.lang.SecurityManager methods and fields(marked forRemoval=true) have been removed.@@@policytool removed − The policytool security tool has been removed.@@@Deprecated Classes in com.sun.security.auth.** removed
Following deprecated classes are removed

com.sun.security.auth.PolicyFile
com.sun.security.auth.SolarisNumericGroupPrincipal
com.sun.security.auth.SolarisNumericUserPrincipal
com.sun.security.auth.SolarisPrincipal
com.sun.security.auth.X500Principal
com.sun.security.auth.module.SolarisLoginModule
com.sun.security.auth.module.SolarisSystem

@@@com.sun.security.auth.PolicyFile@@@com.sun.security.auth.SolarisNumericGroupPrincipal@@@com.sun.security.auth.SolarisNumericUserPrincipal@@@com.sun.security.auth.SolarisPrincipal@@@com.sun.security.auth.X500Principal@@@com.sun.security.auth.module.SolarisLoginModule@@@com.sun.security.auth.module.SolarisSystem@@@Old(JDK 6, JDK 7, and JDK 8 Era) Standard Doclet removed − The old (JDK 6, JDK 7 and JDK 8 era) standard doclet, used to output HTML content, and are superseded by a replacement, has been removed.@@@javah tool removed − The Native-Header Generation Tool, javah has been removed.@@@Java Launcher's Data Model Options -d32 and -d64 removed. − The obsolete and deprecated selection options (-d32, -d64, -J-d32 and -J-d64) have been removed.|||com.sun.security.auth.PolicyFile@@@com.sun.security.auth.SolarisNumericGroupPrincipal@@@com.sun.security.auth.SolarisNumericUserPrincipal@@@com.sun.security.auth.SolarisPrincipal@@@com.sun.security.auth.X500Principal@@@com.sun.security.auth.module.SolarisLoginModule@@@com.sun.security.auth.module.SolarisSystem|||SNMP Monitoring Support deprecated − jdk.snmp module supporting SNMP monitoring and management support for the JVM is now deprecated and is marked forRemoval=true.@@@java.security classes deprecated − java.security.{Certificate, Identity, IdentityScope, Signer} classes are now deprecated and is marked forRemoval=true.@@@javax.security.auth.Policy API forRemoval − The deprecated javax.security.auth.Policy is marked forRemoval=true.@@@APIs marked for removal − Following APIs are also marked for removal in Java 10 release as there standalone implementations are readily available.

java.activation
java.corba
java.se.ee (aggregator)
java.transaction
java.xml.bind
java.xml.ws
java.xml.ws.annotation

@@@java.activation@@@java.corba@@@java.se.ee (aggregator)@@@java.transaction@@@java.xml.bind@@@java.xml.ws@@@java.xml.ws.annotation|||java.activation@@@java.corba@@@java.se.ee (aggregator)@@@java.transaction@@@java.xml.bind@@@java.xml.ws@@@java.xml.ws.annotation|||Create a list of Classes to archive − Create a list welcome.lst of a class Greeting.java lying in welcome.jar using Java Launcher.|||Create AppCDS archive − Archive a list of classes to be used for Application class data sharing.|||Use AppCDS archive − Use AppCDS archive while using java launcher.|||cu − Currency Types@@@fw − First Day of a Week@@@rg − Region Override@@@tz − Time Zone|||root@@@corba@@@hotspot@@@jaxp@@@jaxws@@@jdk@@@langtools@@@nashorn",,,"public class MyFirstJavaProgram {   public static void main(String []args) {      System.out.println(""Hello World"");   }}|||public class Tester {   public static void main(String[] args) {      Runtime.Version version = Runtime.version();      System.out.printf("" feature: %s%n interim: %s%n update: %s%n patch: %s%n"",         version.feature(),          version.interim(),          version.update(),          version.patch());   }}|||Map<Integer, String> mapNames = new HashMap<>();var mapNames1 = new HashMap<Integer, String>();|||import java.util.List;public class Tester {   public static void main(String[] args) {      var names = List.of(""Julie"", ""Robert"", ""Chris"", ""Joseph"");       for (var name : names) {         System.out.println(name);      }      System.out.println("""");      for (var i = 0; i < names.size(); i++) {         System.out.println(names.get(i));      }   }}|||import java.util.List;import java.util.stream.Collectors;public class Tester {   public static void main(String[] args) {      var ids = List.of(1, 2, 3, 4, 5);       try {         // get an unmodifiable list         List<Integer> copyOfIds = List.copyOf(ids);         copyOfIds.add(6);	      } catch(UnsupportedOperationException e){         System.out.println(""Collection is not modifiable."");      }      try{         // get an unmodifiable list         List<Integer> evenNumbers = ids.stream()            .filter(i -> i % 2 == 0)            .collect(Collectors.toUnmodifiableList());;         evenNumbers.add(6);	      }catch(UnsupportedOperationException e){         System.out.println(""Collection is not modifiable."");      }   }}|||java.text.DateFormat::get*Instancejava.text.DateFormatSymbols::getInstancejava.text.DecimalFormatSymbols::getInstancejava.text.NumberFormat::get*Instancejava.time.format.DateTimeFormatter::localizedByjava.time.format.DateTimeFormatterBuilder::getLocalizedDateTimePatternjava.time.format.DecimalStyle::ofjava.time.temporal.WeekFields::ofjava.util.Calendar::{getFirstDayOfWeek,getMinimalDaysInWeek}java.util.Currency::getInstancejava.util.Locale::getDisplayNamejava.util.spi.LocaleNameProvider"
Learn Java-10,Java 10 - Useful Resources,Java 10 - Useful Resources|||Useful Links on Java 10@@@Useful Books on Java 10,"The following resources contain additional information on Java 10. Please use them to get more in-depth knowledge on this topic.|||Java 10 - Java 10 Official What's New page.|||Java 10 - Wiki - This site details various versions of Java.|||To enlist your site on this page, please drop an email to contact@tutorialspoint.com",Java 10 - Java 10 Official What's New page.@@@Java 10 - Wiki - This site details various versions of Java.,,,
Learn Java-10,Discuss Java 10,Discuss Java 10|||Useful Video Courses|||Java Date and Time Online Training@@@Java Servlet Online Training@@@JavaScript Online Training@@@Java Online Training@@@Java Essential Training@@@Java Essentials Online Training,Java 10 is a major feature release of Java programming language. This is an introductory tutorial that explains the basic-to-advanced features of Java 10 and their usage in a simple and intuitive way.,,,,
