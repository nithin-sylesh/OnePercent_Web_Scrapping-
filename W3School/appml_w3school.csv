Heading,Sub-Heading,Links,Description,List Headings,Unordered Lists,Ordered Lists,Table Data,Examples
AppML Tutorial,AppML HOME,https://www.w3schools.com/appml/default.asp,"AppML Brings Data to HTML|||""No Nonsense Web Applications""|||The Web is growing fast, and the amount of data in Cyberspace is growing even faster.|||Every day new information systems are developed, and every day new users are connected,and data can be accessed 24/7 from anywhere in the world.|||Faster and better software development methods are desperately needed.|||Along these lines, W3Schools has developed a very flexible technique for retrieving, displaying, and manipulate data,without the need for traditional programming.|||Cooperating with Jan Egil Refsnes, W3schools has developed a vocabulary for defining Web applications.The vocabulary is called AppML (Application Modeling Language).|||AppML uses the most up-to-date techniques and ideas of modern Web development with focus on:|||AppML supports the functions you find in other frameworks likeReact, Angular, and Vue, but AppML is much easier to use, and much easier to understand.|||AppML stands for Application Modeling Language.|||AppML is not a programming language. It is descriptive language (a language for describing applications).|||It is built around familiar Web application concepts like:|||AppML runs in any HTML page. No installation is required. |||AppML is a tool for bringing data to HTML applications:|||ObjectsJSON FilesText FilesXML FilesPHP/MySQL|||HTML is not very suitable for describing web applications.|||AppML is made for web applications:|||AppML is very easy to understand and extraordinarily quick to develop.|||This example shows how easy AppML can bring data to HTML: |||AppML is a tool for easy, rapid, and agile web application development.|||On today's market, there are many frameworks (tools or libraries) designed to extend HTML.|||Most of these frameworks manipulate HTML, CSS or JavaScript in a way that makes them difficult to use (especially when used in combination).|||AppML is different. You have full HTML, CSS, and JavaScript freedom.|||AppML makes it easy to create Single Page Applications (SPA) in a very clean and efficient way. |||Even if you have never worked with web development before, you will find AppML very easy to use.|||If you are an experienced web developer, you will soon discover the power of AppML.",,"Low Cost@@@Rapid and Agile Web Develoment@@@Optimized for Cloud Computing@@@High Speed and Low Bandwidth Consumption@@@MVC (Model Viev Controller) Architecture@@@Full Separation of Content from Presentation @@@Highly Scalable and Testable@@@Easy Configuration and Reconfiguration|||Forms@@@Lists@@@Reports@@@Filters@@@Functions@@@Databases|||From Objects@@@From JSON files@@@From Text files@@@From XML files@@@From databases|||AppML extends HTML with data attributes.@@@AppML adds controllers to HTML, to control the behavior of HTML data.",,,"[['\n<!DOCTYPE html>', '\n<html lang=""en-US"">', '\n<title>Customers</title>', '\n<link rel=""stylesheet"" href=""style.css"">', '\n<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n<body>', '\n<h1>Customers</h1>', '\n<table appml-data=""customers.js"">', '\n<tr>', '\xa0 <th>Customer</th>', '\n\xa0 <th>City</th>', '\n\xa0 <th>Country</th>', '\n</tr>', '\n<tr appml-repeat=""records"">', '\n\xa0 <td>{{CustomerName}}</td>', '\n\xa0 <td>{{City}}</td>', '\n\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>', '\n', '\n</body>', '\n</html>\n']]"
AppML Tutorial,AppML How To,https://www.w3schools.com/appml/appml_howto.asp,"How to build an AppML Application in 2 easy steps.|||The {{ }} brackets are placeholders for AppML data.|||Feel free to replace the CSS with your own favorite style sheet.|||Use AppML to add data to your page:|||<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""> adds AppML to your page.|||appml-data=""customers.js"" connects AppML data (customers.js) to an HTML element (<table>).In this case we have used a JSON file:customers.jsappml-repeat=""records"" repeats an HTML element (<tr>) for each item (records) in a data object.The {{ }} brackets are placeholders for AppML data.❮ PreviousNext ❯|||In this case we have used a JSON file:customers.jsappml-repeat=""records"" repeats an HTML element (<tr>) for each item (records) in a data object.The {{ }} brackets are placeholders for AppML data.❮ PreviousNext ❯|||appml-repeat=""records"" repeats an HTML element (<tr>) for each item (records) in a data object.|||The {{ }} brackets are placeholders for AppML data.",,,,,"[['\n<!DOCTYPE html>', '\n    <html lang=""en-US"">', '<link rel=""stylesheet"" href=""style.css"">', '<title>Customers</title>', '\n <body>', '\n', '<h1>Customers</h1>', '\n<table>', '\n<tr>', '\n\xa0 <th>Customer</th>', '\n\xa0 <th>City</th>', '\n\xa0 <th>Country</th>', '</tr>', '\n<tr>', '\n\xa0 <td>{{CustomerName}}</td>', '\n\xa0 <td>{{City}}</td>', '\n\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>', '\n', '</body>', '</html>', '\n'], ['\n    <!DOCTYPE html>', '<html lang=""en-US"">', '<title>Customers</title>', '\n    <link rel=""stylesheet"" href=""style.css"">', '\n', <strong>&lt;script src=""https://www.w3schools.com/appml/2.0.3/appml.js""&gt;&lt;/script&gt;</strong>, '\n    <body>', '<h1>Customers</h1>', '<table ', <strong>appml-data=""customers.js""</strong>, '>', '\n<tr>', '\n\xa0 <th>Customer</th>', '\n\xa0 <th>City</th>', '\n\xa0 <th>Country</th>', '</tr>', '\n<tr ', <strong>appml-repeat=""records""</strong>, '>', '\n\xa0 <td>{{CustomerName}}</td>', '\n\xa0 <td>{{City}}</td>', '\n\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>', '\n', '</body>', '</html>']]"
AppML Tutorial,AppML Data,https://www.w3schools.com/appml/appml_data.asp,"The main purpose of AppML is to provide data to HTML pages.|||A common way to separate HTML and Data, is to store the data in a JavaScript object.|||Another common way to separate HTML and Data, is to store the data in a JSON file:|||With AppML, you can specify a JSON file as the data source in the appml-data attribute:|||With a little help from a web server, you can feed your application with SQL data.|||This example uses PHP to read data from a MySQL database:|||You are about to discover the power of AppML.|||AppML can provide you with data, controllers, and models for:|||You can put as many AppML applications as you like inside an HTML page.|||AppML does not interfere with other parts of the page.|||You have full HTML, CSS, and JavaScript freedom.|||AppML can be used to develop full scale CRUD web applications.|||CRUD: Create, Read, Update,Delete.||| To discover the power of AppML:View an AppML Demo.",Connecting AppML to Data,"AppML can display data from variables@@@AppML can display data from files@@@AppML can display data from databases|||Super-easy HTML Application Development@@@Super-easy Modeling, Prototyping, and Testing",,,"[['\n    <table appml-data=""', <strong>dataObj</strong>, '"">', '\n<tr>', '\n\xa0 <th>Customer</th>', '\n\xa0 <th>City</th>', '\n\xa0 <th>Country</th>', '</tr>', '\n<tr appml-repeat=""records"">', '\n\xa0 <td>{{CustomerName}}</td>', '\n\xa0 <td>{{City}}</td>', '\n\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>', '\n', '<script>', 'var dataObj = {', '""records"":[', '\n    {""CustomerName"":""Alfreds Futterkiste"",""City"":""Berlin"",""Country"":""Germany""},', '\n    {""CustomerName"":""Ana Trujillo Emparedados y helados"",""City"":""México D.F."",""Country"":""Mexico""},', '\n    {""CustomerName"":""Antonio Moreno Taquería"",""City"":""México D.F."",""Country"":""Mexico""},', '\n    {""CustomerName"":""Around the Horn"",""City"":""London"",""Country"":""UK""},', '{""CustomerName"":""B\'s \n    Beverages"",""City"":""London"",""Country"":""UK""},', '{""CustomerName"":""Berglunds \n    snabbköp"",""City"":""Luleå"",""Country"":""Sweden""},', '{""CustomerName"":""Blauer See \n    Delikatessen"",""City"":""Mannheim"",""Country"":""Germany""},', '{""CustomerName"":""Blondel \n    père et fils"",""City"":""Strasbourg"",""Country"":""France""},', '{""CustomerName"":""Bólido \n    Comidas preparadas"",""City"":""Madrid"",""Country"":""Spain""},', '{""CustomerName"":""Bon \n    app\'"",""City"":""Marseille"",""Country"":""France""},', '{""CustomerName"":""Bottom-Dollar \n    Marketse"",""City"":""Tsawassen"",""Country"":""Canada""},', '{""CustomerName"":""Cactus \n    Comidas para llevar"",""City"":""Buenos Aires"",""Country"":""Argentina""},', '{""CustomerName"":""Centro \n    comercial Moctezuma"",""City"":""México D.F."",""Country"":""Mexico""},', '\n    {""CustomerName"":""Chop-suey Chinese"",""City"":""Bern"",""Country"":""Switzerland""},', '\n    {""CustomerName"":""Comércio Mineiro"",""City"":""São Paulo"",""Country"":""Brazil""}', ']};', '</script>', '\n'], ['\n    <table ', <strong>appml-data=""customers.js</strong>, '"">', '\n<tr>', '\n\xa0 <th>Customer</th>', '\n\xa0 <th>City</th>', '\n\xa0 <th>Country</th>', '</tr>', '\n<tr appml-repeat=""records"">', '\n\xa0 <td>{{CustomerName}}</td>', '\n\xa0 <td>{{City}}</td>', '\n\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>\n'], ['\n<table appml-data=""', <strong>https://www.w3schools.com/appml/customers.php""</strong>, '>', '\n<tr>', '\n\xa0 <th>Customer</th>', '\n\xa0 <th>City</th>', '\n\xa0 <th>Country</th>', '</tr>', '\n<tr appml-repeat=""records"">', '\n\xa0 <td>{{CustomerName}}</td>', '\n\xa0 <td>{{City}}</td>', '\n\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>']]"
AppML Tutorial,AppML Includes,https://www.w3schools.com/appml/appml_includes.asp,"With AppML, you can include HTML in HTML.|||A good example of this, is to include a standard HTML footer in all your HTML pages.|||This is an example of a file containing a standard footer:|||In this example the appml-include-html attribute is used to include the file ""inc_footer.htm"": ",,,,,"[['\n<hr style=""margin-top:10px;"">', '\n<p style=""font-size:11px"">2016&copy; W3Schools. All rights reserved.</p>', '\n<hr>'], ['\n<!DOCTYPE html>', '\n<html lang=""en-US"">', '\n', '\n<title>Customers</title>', '\n<link rel=""stylesheet"" href=""style.css"">', '\n<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n', '\n<body>', '\n', '\n<h1>Customers</h1>', '\n<table appml-data=""customers.js"">', '\n<tr>', '\n\xa0 <th>Customer</th>', '\n\xa0 <th>City</th>', '\n\xa0 <th>Country</th>', '\n</tr>', '\n<tr appml-repeat=""records"">', '\n\xa0 <td>{{CustomerName}}</td>', '\n\xa0 <td>{{City}}</td>', '\n\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>', '\n', '\n<div ', <strong>appml-include-html=""inc_footer.htm""</strong>, '></div>', '\n', '\n</body>', '\n</html>\n']]"
AppML Tutorial,AppML Controllers,https://www.w3schools.com/appml/appml_controllers.asp,"The purpose of an AppML controller, is to let you control your application.|||By default AppML applications run without a controller:|||With an AppML controller, you can control your application with JavaScript.|||The controller is a JavaScript function, provided by you.|||The appml-controller attribute is used to refer to a controller function.|||The controller (myController) in the example above, changes the value of ""CustomerName"" to uppercase, before it is displayed. |||If you have a controller, AppML will send the application object ($appml) to the controller, for every important action.|||One of the application properties is a message ($appml.message), describing the application state.|||Messages are explained in the next chapter.",What Can a Controller Do?|||Without a Controller,Set initial data@@@Change application data@@@Handle input and output@@@Validate data@@@Summarize data@@@Handle errors@@@Start and stop applications@@@And much more,,"ready|||Sent after AppML is initiated, and ready to load data.&&&loaded|||Sent after AppML is fully loaded, ready to display data.&&&display|||Sent before AppML displays a data item.&&&done|||Sent after AppML is done (finished displaying).&&&submit|||Sent before AppML submits data.&&&error|||Sent after AppML has encountered an error.","[['\n<table appml-data=""customers.js', <strong>""</strong>, '>', '\n<tr>', '\n\xa0 <th>Customer</th>', '\n\xa0 <th>City</th>', '\n\xa0 <th>Country</th>', '</tr>', '\n<tr appml-repeat=""records"">', '\n\xa0 <td>{{CustomerName}}</td>', '\n\xa0 <td>{{City}}</td>', '\n\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>'], ['\n    <h1>Customers</h1>', '<table appml-data=""customers.js"" ', <strong>appml-controller=""myController</strong>, '"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '\n', '<script>', 'function myController($appml) {', '\xa0\xa0\xa0 \n    if ($appml.message == ""display"") {', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if ($appml.display.name == ""CustomerName"") \n    {', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 $appml.display.value = $appml.display.value.toUpperCase();', '\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 }', '\xa0\xa0\xa0 }', '}', '</script>']]"
AppML Tutorial,AppML Messages,https://www.w3schools.com/appml/appml_messages.asp,"When AppML is about to perform an action, it sends the application object ($appml) to the controller.|||One of the application object's properties is a message ($appml.message), describing the application state.|||Testing this message, enables you to add your own JavaScript code, depending on the action.|||This is a list of AppML messages that can be received:|||When an AppML application is ready to load data, it will send a ""ready"" message.|||This is the perfect place to provide the application with initial data (start values):|||In the example above, when the $appml.message is ""ready"", the controller adds two new properties to the application (today and copyright).|||When the application runs, the new properties are available to the application.|||When an AppML application is loaded with data (ready to display), it will send a ""loaded"" message.|||This is the perfect place to provide changes (if necessary) to  the loaded data.|||Each time AppML is displaying a data item, it will send a ""display"" message.|||This is the perfect place to modify the output:|||In the example above, ""CustomerName"" is truncated to 15 characters, and ""Country"" is converted to upper case.|||When an AppML application has finished displaying data, it will send a ""done"" message.|||This is the perfect place to clean up or calculate application data (after display).|||When an AppML application is ready to submit data, it will send a ""submit"" message.|||This is the perfect place to validate application input.|||If an error occurs, AppML will send an ""error"" message.|||This is the perfect place to handle errors.|||This is a list of some commonly used AppML properties:",,,,"""ready""|||Sent after AppML is initiated, and ready to load data.&&&""loaded""|||Sent after AppML is fully loaded, ready to display data.&&&""display""|||Sent before AppML displays a data item.&&&""done""|||Sent after AppML is done (finished displaying).&&&""submit""|||Sent before AppML submits data.&&&""error""|||Sent after AppML has encountered an error.$$$$appml.message|||The current state of the application.&&&$appml.display.name|||The name of the data field about to be displayed.&&&$appml.display.value|||The value of the data field about to be displayed.&&&$appml.error.number|||The error number.&&&$appml.error.description|||The error description.","[['\n    function myController($appml) {', '\xa0\xa0\xa0 if ($appml.message == ""ready"") {alert (""Hello \n    Application"");}', '\n    }'], ['\n    <div appml-controller=""myController"" appml-data=""customers.js"">', '<h1>Customers</h1>', '<p>{{today}}</p>', '<table>', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '\n    <p>Copyright {{copyright}}</p>', '</div>', '\n', '<script>', 'function myController($appml) {', <strong>    if ($appml.message == ""ready"") {<br/>
</strong>, '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n    $appml.today = new Date();', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n    $appml.copyright = ""W3Schools""', '\xa0\xa0\xa0 }', '}', '</script>'], ['\n    <div appml_app=""myController"" appml-data=""customers.js"">', '\n    <h1>Customers</h1>', '<table>', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\n    \xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '</div>', '\n', '<script>', 'function myController($appml) {', '\xa0\xa0\xa0 if \n    ($appml.message == ""display"") {', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if ($appml.display.name == \n    ""CustomerName"") {', '\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 $appml.display.value = $appml.display.value.substr(0,15);\n', '\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 }', '\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 if ($appml.display.name == ""Country"") {', '\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n    $appml.display.value = $appml.display.value.toUpperCase();', '\n    \xa0\xa0\xa0\xa0\xa0\xa0\xa0 }', '\xa0\xa0\xa0 }', '\n    }', '</script>'], ['\n    <script>', 'function myController($appml) {', <strong>    if ($appml.message == ""done"") {<br/>
</strong>, '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n    ', <em>calculate data here</em>, '\xa0\xa0\xa0 }', '}', '</script>'], ['\n    <script>', 'function myController($appml) {', <strong>    if ($appml.message == ""submit"") {<br/>
</strong>, '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n    ', <em>validate data here</em>, '\xa0\xa0\xa0 }', '}', '</script>'], ['\n    <script>', 'function myController($appml) {', <strong>    if ($appml.message == 
    ""error"") {<br/>
            
    alert ($appml.error.number + "" "" + $appml.error.description)<br/>    }<br/>
</strong>, '}', '</script>']]"
AppML Tutorial,AppML Models,https://www.w3schools.com/appml/appml_models.asp,"An AppML model describes an application.|||An AppML model is a JavaScript object (JSON) describing an application.|||This small model describes a full application for retrieving data from a database:|||With an AppML model you can:|||To allow users to filter data (search ,sort), you can add filter information to the model:|||To allow users to update data, you can add update information to the model:  |||The applications you have seen earlier in this tutorial, did not use any models.|||In later chapters, we will connect to databases, read, filter, and update data, as specified in a model.",,"Define connections to databases like MySQL, SQL Server, Access, and Oracle.@@@Define connections to data files like JSON, XML, and other text files.@@@Define SQL statements for retrieving data.@@@Define filter and sorting restrictions.@@@Define data types, data formats, and update restrictions.@@@Define application security, users, and user groups.",,,[]
AppML Tutorial,AppML API,https://www.w3schools.com/appml/appml_methods.asp,The AppML API defines the methods and properties of AppML|||With methods and properties you can:|||new AppML() creates a new AppML object.dataSource sets the data source of the AppML object.getData() gets the data.data.records contains the data records. |||You can loop the records and display the content in an HTML element:,,Create AppML applications@@@Feed applications with data@@@Fetch application data for use in your web page,,"new AppML()|||Creates a new AppML object&&&run()|||Runs an application object&&&appml(""name"")|||Returns the appml object with the specified name&&&displayMessage(text)|||Displays a specified message.&&&setError(no, description)|||Sets a specified error and error description.$$$&&&appName|||The application name (the container id)&&&container|||The application container element&&&controller|||The application controller&&&data|||The application data object&&&dataSource|||The application data source&&&message|||The application message$$$data.model|||The application data model&&&data.records|||The application data records",[]
AppML Cases,Case Intro,https://www.w3schools.com/appml/appml_cases.asp,"This case study demonstrates how to build Internet applications using AppML.|||In this case study, AppML runs both in the browser (appml.js) and on the server (appml.php).|||We will use a web server located at https://www.w3schools.com. |||All the files and databases are located on the server.|||Later in this tutorial you will learn how to simulate a web server in the browser.|||To demonstrate how to access text files, we have used files like this:|||To demonstrate how to access XML files, we have used a files like this:|||To demonstrate how to access JSON files, we have used files like this:|||Our test database contains several tables like this:",Part I: Accessing Internet Files|||Part II: Accessing Internet Databases,Accessing a TEXT file@@@Accessing an XML file@@@Accessing a JSON file|||Listing database data@@@Filtering database data@@@Editing database data,,"Around the Horn|||120 Hanover Sq.|||London|||UK&&&Berglunds snabbkjøp|||Berguvsvägen 8|||Luleå |||Sweden&&&Blauer See Delikatessen|||Forsterstr. 57|||Mannheim|||Germany&&&Blondel père et fils|||24, place Kléber|||Strasbourg|||France&&&Bólido Comidas preparadas|||C/ Araquil, 67|||Madrid|||Spain&&&Bottom-Dollar Markets|||23 Tsawassen Blvd.|||Tsawassen|||Canada$$$&&&Exotic Liquid|||49 Gilbert St.|||London|||UK&&&New Orleans Cajun Delights|||P.O. Box 78934|||New Orleans|||USA&&&Grandma Kelly's Homestead|||707 Oxford Rd.|||Ann Arbor|||USA&&&Tokyo Traders|||9-8 SekimaiMusashino-shi|||Tokyo|||Japan&&&Cooperativa de Quesos 'Las Cabras'|||Calle del Rosal 4|||Oviedo|||Spain&&&Mayumi's|||92 Setsuko Chuo-ku|||Osaka|||Japan&&&Pavlova, Ltd.|||74 Rose St. Moonie Ponds|||Melbourne|||Australia&&&Specialty Biscuits, Ltd.|||29 King's Way|||Manchester|||UK&&&PB Kn ckebr d AB|||Kaloadagatan 13|||G teborg|||Sweden&&&Refrescos Americanas LTDA|||Av. das Americanas 12.890|||S o Paulo|||Brazil$$$Chai|||10 boxes x 20 bags|||18|||39&&&Chang|||24 - 12 oz bottles|||19|||17&&&Aniseed Syrup|||12 - 550 ml bottles|||10|||13&&&Chai|||10 boxes x 20 bags|||18|||39&&&Chef Anton's Gumbo Mix|||36 boxes|||21|||0&&&Grandma's Boysenberry Spread|||12 - 8 oz jars|||25|||120&&&Uncle Bob's Organic Dried Pears|||12 - 1 lb pkgs.|||30|||15&&&Northwoods Cranberry Sauce|||12 - 12 oz jars|||40|||6&&&Mishi Kobe Niku|||18 - 500 g pkgs.|||97|||29&&&Ikura|||12 - 200 ml jars|||31|||31","[['\n    <?xml version=""1.0"" encoding=""ISO-8859-1""?>', '<CATALOG>', '<CD>', '\n    \xa0\n    <TITLE>Empire Burlesque</TITLE>', '\xa0 <ARTIST>Bob Dylan</ARTIST>', '\n    \xa0\n    <COUNTRY>USA</COUNTRY>', '\xa0 <COMPANY>Columbia</COMPANY>', '\n    \xa0\n    <PRICE>10.90</PRICE>', '\xa0 <PUBLISHED>1985</PUBLISHED>', '</CD>', '<CD>', '\n    \xa0\n    <TITLE>Hide your heart</TITLE>', '\xa0 <ARTIST>Bonnie Tyler</ARTIST>', '\n    \xa0\n    <COUNTRY>UK</COUNTRY>', '\xa0 <COMPANY>CBS Records</COMPANY>', '\n    \xa0\n    <PRICE>9.90</PRICE>', '\xa0 <PUBLISHED>1988</PUBLISHED>', '</CD>', '\n    .', '.\n']]"
AppML Cases,Case Text File,https://www.w3schools.com/appml/appml_case_txt.asp,This is the HTML source:|||This is the model used in the application:|||This is the comma separated text file: ,,,,,"[['\n    <!DOCTYPE html>', '<html lang=""en-US"">', '\n    <link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    <body>', '\n    <div class=""w3-container"" appml-data=""appml.php?model=model_cd_from_txt"">', '\n    <h1>CD Collection</h1>', '<h3>Extracted from a comma separated text \n    file</h3>', '<div \n    appml-include-html=""inc_listcommands_nofilter.htm""></div>', '\n    <table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th>Title</th>', '\xa0\xa0\xa0 \n    <th>Artist</th>', '\xa0\xa0\xa0 <th>Price</th>', '\xa0 </tr>', '\xa0 <tr \n    appml-repeat=""records"">', '\xa0\xa0\xa0 <td>{{Title}}</td>', '\xa0\xa0\xa0 <td>{{Artist}}</td>', '\n    \xa0\xa0\xa0 <td>{{Price}}</td>', '\xa0 </tr>', '\n    </table>', '</div>', '</body>', '</html>']]"
AppML Cases,Case XML File,https://www.w3schools.com/appml/appml_case_xml.asp,This is the HTML source:|||This is the model used in the application:|||This is the XML file: ,,,,,"[['\n    <!DOCTYPE html>', '<html lang=""en-US"">', '<head>', '<meta charset=""utf-8"">', '\n    <link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    </head>', '<body>', '<div class=""w3-container"" \n    appml-data=""appml.php?model=model_cd_from_xml"">', '\n    <h1>CD Collection</h1>', '<h3>Extracted from an XML file</h3>', '<div \n    appml-include-html=""inc_listcommands_nofilter.htm""></div>', '<table \n    class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th>Title</th>', '\xa0\xa0\xa0 <th>Artist</th>', '\n    \xa0\xa0\xa0 <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{Title}}</td>', '\xa0\xa0\xa0 <td>{{Artist}}</td>', '\xa0\xa0\xa0 <td>{{Country}}</td>', '\n    \xa0 </tr>', '\n    </table>', '</div>', '</body>', '</html>'], ['\n    <?xml version=""1.0"" encoding=""ISO-8859-1""?>', '<CATALOG>', '<CD>', '\n    <TITLE>Empire Burlesque</TITLE>', '<ARTIST>Bob Dylan</ARTIST>', '\n    <COUNTRY>USA</COUNTRY>', '<COMPANY>Columbia</COMPANY>', '\n    <PRICE>10.90</PRICE>', '<PUBLISHED>1985</PUBLISHED>', '</CD>', '<CD>', '\n    <TITLE>Hide your heart</TITLE>', '<ARTIST>Bonnie Tyler</ARTIST>', '\n    <COUNTRY>UK</COUNTRY>', '<COMPANY>CBS Records</COMPANY>', '\n    <PRICE>9.90</PRICE>', '<PUBLISHED>1988</PUBLISHED>', '</CD>', '<CD>', '\n    <TITLE>Greatest Hits</TITLE>', '<ARTIST>Dolly Parton</ARTIST>', '\n    <COUNTRY>USA</COUNTRY>', '<COMPANY>RCA</COMPANY>', '<PRICE>9.90</PRICE>', '\n    <PUBLISHED>1982</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Still got the \n    blues</TITLE>', '<ARTIST>Gary Moore</ARTIST>', '<COUNTRY>UK</COUNTRY>', '\n    <COMPANY>Virgin records</COMPANY>', '<PRICE>10.20</PRICE>', '\n    <PUBLISHED>1990</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Eros</TITLE>', '\n    <ARTIST>Eros Ramazzotti</ARTIST>', '<COUNTRY>EU</COUNTRY>', '\n    <COMPANY>BMG</COMPANY>', '<PRICE>9.90</PRICE>', '<PUBLISHED>1997</PUBLISHED>', '\n    </CD>', '<CD>', '<TITLE>One night only</TITLE>', '<ARTIST>Bee Gees</ARTIST>', '\n    <COUNTRY>UK</COUNTRY>', '<COMPANY>Polydor</COMPANY>', '<PRICE>10.90</PRICE>', '\n    <PUBLISHED>1998</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Sylvias \n    Mother</TITLE>', '<ARTIST>Dr.Hook</ARTIST>', '<COUNTRY>UK</COUNTRY>', '\n    <COMPANY>CBS</COMPANY>', '<PRICE>8.10</PRICE>', '<PUBLISHED>1973</PUBLISHED>', '\n    </CD>', '<CD>', '<TITLE>Maggie May</TITLE>', '<ARTIST>Rod Stewart</ARTIST>', '\n    <COUNTRY>UK</COUNTRY>', '<COMPANY>Pickwick</COMPANY>', '<PRICE>8.50</PRICE>', '\n    <PUBLISHED>1990</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Romanza</TITLE>', '\n    <ARTIST>Andrea Bocelli</ARTIST>', '<COUNTRY>EU</COUNTRY>', '\n    <COMPANY>Polydor</COMPANY>', '\n    <PRICE>10.80</PRICE>', '<PUBLISHED>1996</PUBLISHED>', '</CD>', '<CD>', '\n    <TITLE>When a man loves a woman</TITLE>', '<ARTIST>Percy Sledge</ARTIST>', '\n    <COUNTRY>USA</COUNTRY>', '<COMPANY>Atlantic</COMPANY>', '<PRICE>8.70</PRICE>', '\n    <PUBLISHED>1987</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Black angel</TITLE>', '\n    <ARTIST>Savage Rose</ARTIST>', '<COUNTRY>EU</COUNTRY>', '\n    <COMPANY>Mega</COMPANY>', '<PRICE>10.90</PRICE>', '\n    <PUBLISHED>1995</PUBLISHED>', '</CD>', '<CD>', '<TITLE>1999 Grammy \n    Nominees</TITLE>', '<ARTIST>Many</ARTIST>', '<COUNTRY>USA</COUNTRY>', '\n    <COMPANY>Grammy</COMPANY>', '<PRICE>10.20</PRICE>', '\n    <PUBLISHED>1999</PUBLISHED>', '</CD>', '<CD>', '<TITLE>For the good \n    times</TITLE>', '<ARTIST>Kenny Rogers</ARTIST>', '<COUNTRY>UK</COUNTRY>', '\n    <COMPANY>Mucik Master</COMPANY>', '<PRICE>8.70</PRICE>', '\n    <PUBLISHED>1995</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Big Willie \n    style</TITLE>', '<ARTIST>Will Smith</ARTIST>', '<COUNTRY>USA</COUNTRY>', '\n    <COMPANY>Columbia</COMPANY>', '<PRICE>9.90</PRICE>', '\n    <PUBLISHED>1997</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Tupelo Honey</TITLE>', '\n    <ARTIST>Van Morrison</ARTIST>', '<COUNTRY>UK</COUNTRY>', '\n    <COMPANY>Polydor</COMPANY>', '\n    <PRICE>8.20</PRICE>', '<PUBLISHED>1971</PUBLISHED>', '</CD>', '<CD>', '\n    <TITLE>Soulsville</TITLE>', '<ARTIST>Jorn Hoel</ARTIST>', '\n    <COUNTRY>Norway</COUNTRY>', '<COMPANY>WEA</COMPANY>', '<PRICE>7.90</PRICE>', '\n    <PUBLISHED>1996</PUBLISHED>', '</CD>', '<CD>', '<TITLE>The very best \n    of</TITLE>', '<ARTIST>Cat Stevens</ARTIST>', '<COUNTRY>UK</COUNTRY>', '\n    <COMPANY>Island</COMPANY>', '<PRICE>8.90</PRICE>', '\n    <PUBLISHED>1990</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Stop</TITLE>', '\n    <ARTIST>Sam Brown</ARTIST>', '<COUNTRY>UK</COUNTRY>', '<COMPANY>A and \n    M</COMPANY>', '<PRICE>8.90</PRICE>', '<PUBLISHED>1988</PUBLISHED>', '</CD>', '\n    <CD>', '<TITLE>Bridge of Spies</TITLE>', ""<ARTIST>T'Pau</ARTIST>"", '\n    <COUNTRY>UK</COUNTRY>', '<COMPANY>Siren</COMPANY>', '<PRICE>7.90</PRICE>', '\n    <PUBLISHED>1987</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Private \n    Dancer</TITLE>', '<ARTIST>Tina Turner</ARTIST>', '<COUNTRY>UK</COUNTRY>', '\n    <COMPANY>Capitol</COMPANY>', '<PRICE>8.90</PRICE>', '\n    <PUBLISHED>1983</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Midt om \n    natten</TITLE>', '\n    <ARTIST>Kim Larsen</ARTIST>', '<COUNTRY>EU</COUNTRY>', '\n    <COMPANY>Medley</COMPANY>', '<PRICE>7.80</PRICE>', '\n    <PUBLISHED>1983</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Pavarotti Gala \n    Concert</TITLE>', '<ARTIST>Luciano Pavarotti</ARTIST>', '\n    <COUNTRY>UK</COUNTRY>', '<COMPANY>DECCA</COMPANY>', '<PRICE>9.90</PRICE>', '\n    <PUBLISHED>1991</PUBLISHED>', '</CD>', '<CD>', '<TITLE>The dock of the \n    bay</TITLE>', '<ARTIST>Otis Redding</ARTIST>', '<COUNTRY>USA</COUNTRY>', '\n    <COMPANY>Atlantic</COMPANY>', '<PRICE>7.90</PRICE>', '\n    <PUBLISHED>1987</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Picture book</TITLE>', '\n    <ARTIST>Simply Red</ARTIST>', '<COUNTRY>EU</COUNTRY>', '\n    <COMPANY>Elektra</COMPANY>', '<PRICE>7.20</PRICE>', '\n    <PUBLISHED>1985</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Red</TITLE>', '\n    <ARTIST>The Communards</ARTIST>', '<COUNTRY>UK</COUNTRY>', '\n    <COMPANY>London</COMPANY>', '<PRICE>7.80</PRICE>', '\n    <PUBLISHED>1987</PUBLISHED>', '</CD>', '<CD>', '<TITLE>Unchain my \n    heart</TITLE>', '<ARTIST>Joe Cocker</ARTIST>', '<COUNTRY>USA</COUNTRY>', '\n    <COMPANY>EMI</COMPANY>', '<PRICE>8.20</PRICE>', '<PUBLISHED>1987</PUBLISHED>', '\n    </CD>', '</CATALOG>\n']]"
AppML Cases,Case JSON File,https://www.w3schools.com/appml/appml_case_json.asp,This is the HTML source:|||This is the model used in the application:|||This is the JSON file:,,,,,"[['\n    <<!DOCTYPE html>', '<html lang=""en-US"">', '\n    <link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    <body>', '\n    <div class=""w3-container"" appml-data=""appml.php?model=model_cd_from_json"">', '\n    <h1>CD Collection</h1>', '<h3>Extracted from a JSON text file</h3>', '\n    <div appml-include-html=""inc_listcommands_nofilter.htm""></div>', '<table \n    class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th>Title</th>', '\xa0\xa0\xa0 <th>Artist</th>', '\n    \xa0\xa0\xa0 <th>Price</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{Title}}</td>', '\xa0\xa0\xa0 <td>{{Artist}}</td>', '\xa0\xa0\xa0 <td>{{Price}}</td>', '\xa0 \n    </tr>', '\n    </table>', '</div>', '</body>', '</html>']]"
AppML Cases,Case Customers,https://www.w3schools.com/appml/appml_case_customers.asp,This is the HTML source:|||These are the models used in the application:,,,,,"[['\n    <!DOCTYPE html>', '<html>', '<head>', '<link rel=""stylesheet"" \n    href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    </head>', '<body>', '<div class=""w3-container w3-content"">', '\n    <h1>Customers</h1>', '<div class=""w3-container w3-light-grey \n    w3-padding-large w3-margin-bottom"" \n    appml-data=""appml.php?model=model_customersform"" \n    appml-controller=""myFormController"" id=""Form01"" style=""display:none;"">', '\xa0 \n    <div appml-include-html=""inc_formcommands.htm""></div>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>CustomerName:</label>', '\xa0\xa0\xa0 <input id=""customername"" class=""w3-input \n    w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>ContactName:</label>', '\xa0\xa0\xa0 \n    <input id=""contactname"" class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\n    \xa0\xa0\xa0 <label>Address:</label>', '\xa0\xa0\xa0 <input id=""address"" class=""w3-input \n    w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>City:</label>', '\xa0\xa0\xa0 <input \n    id=""city"" class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>PostalCode:</label>', '\xa0\xa0\xa0 <input id=""postalcode"" class=""w3-input \n    w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Country:</label>', '\xa0\xa0\xa0 <input \n    id=""country"" class=""w3-input w3-border"">', '\xa0 </p>', '</div>', '\n', '<div appml-data=""appml.php?model=model_customerslist"">', '\xa0 <div \n    appml-include-html=""inc_listcommands.htm""></div>', '\xa0 <div \n    appml-include-html=""inc_filter.htm""></div>', '\xa0 <table class=""w3-table-all"">', '\n    \xa0\xa0\xa0 <tr>', '\xa0\xa0\xa0\xa0\xa0 <th></th>', '\xa0\xa0\xa0\xa0\xa0 <th>Customer</th>', '\xa0\xa0\xa0\xa0\xa0 \n    <th>City</th>', '\xa0\xa0\xa0\xa0\xa0 <th>Country</th>', '\xa0\xa0\xa0 </tr>', '\xa0\xa0\xa0 <tr \n    appml-repeat=""records"">', '\xa0\xa0\xa0\xa0\xa0 <td style=""cursor:pointer;width:40px;"" \n    onclick=""appml(\'Form01\').run({{CustomerID}});"">&#9998;</td>', '\xa0\xa0\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0\xa0\xa0 </tr>', '\xa0 </table>', '</div>', '</div>', '\n    <script>', 'function myFormController($appml) {', '\xa0 if ($appml.message == \n    ""ready"") {return -1; }', '\xa0 if ($appml.message == ""loaded"") {', '\xa0\xa0\xa0 \n    document.getElementById(""Form01"").style.display = """";', '\xa0 }', '}', '\n    </script>', '</body>', '</html>\n']]"
AppML Cases,Case Products,https://www.w3schools.com/appml/appml_case_products.asp,This is the HTML source:|||These are the models used in the application:,,,,,"[['\n    <!DOCTYPE html>', '<html lang=""en-US"">', '<head>', '<meta charset=""utf-8"">', '\n    <title>Products</title>', '<link rel=""stylesheet"" \n    href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    </head>', '<body>', '<div class=""w3-container w3-content"">', '\n    <h1>Products</h1>', '<div id=""Form01"" class=""w3-container w3-light-grey \n    w3-padding-large w3-margin-bottom"" style=""display:none;"" \n    appml-controller=""myFormController"">', '\xa0 <div \n    appml-include-html=""inc_formcommands.htm""></div>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>ProductName:</label>', '\xa0\xa0\xa0 <input id=""ProductName"" class=""w3-input \n    w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Supplier:</label>', '\xa0\xa0\xa0 <div \n    appml-data=""appml.php?model=model_dropdown_suppliers"">', '\xa0\xa0\xa0\xa0\xa0 <select \n    id=""SupplierID"" class=""w3-select w3-border"">', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option \n    appml-repeat=""records"" value=""{{SupplierID}}"">{{SupplierName}}</option>', '\n    \xa0\xa0\xa0\xa0\xa0 </select>', '\xa0\xa0\xa0 </div>', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>Category:</label>', '\xa0\xa0\xa0 <div \n    appml-data=""appml.php?model=model_dropdown_categories"">', '\xa0\xa0\xa0\xa0\xa0 <select \n    id=""CategoryID"" class=""w3-select w3-border"">', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option \n    appml-repeat=""records"" value=""{{CategoryID}}"">{{CategoryName}}</option>', '\n    \xa0\xa0\xa0\xa0\xa0 </select>', '\xa0\xa0\xa0 </div>', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Unit:</label>', '\n    \xa0\xa0\xa0 <input id=""Unit"" class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>Price:</label>', '\xa0\xa0\xa0 <input id=""Price"" onchange=""myValidator(this)"" \n    class=""w3-input w3-border"">', '\xa0 </p>', '</div>', '<div \n    appml-data=""appml.php?model=model_productslist"" \n    appml-controller=""myListController"">', '<div \n    appml-include-html=""inc_listcommands.htm""></div>', '\n    <div appml-include-html=""inc_productsquery.htm""></div>', '<table \n    class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th></th>', '\xa0\xa0\xa0 <th>Product \n    Name</th>', '\xa0\xa0\xa0 <th>Category</th>', '\xa0\xa0\xa0 <th>Supplier</th>', '\xa0\xa0\xa0 \n    <th>Price</th> ', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 <td \n    style=""cursor:pointer"" \n    onclick=""appml(\'Form01\').run({{ProductID}})"">&#9998;</td>', '\xa0\xa0\xa0 \n    <td>{{ProductName}}</td>', '\xa0\xa0\xa0 <td>{{CategoryName}}</td>', '\xa0\xa0\xa0 \n    <td>{{SupplierName}}</td>', '\xa0\xa0\xa0 <td>{{Price}}</td> ', '\xa0 </tr>', '</table>', '\n    </div>', '<h3 id=""sumprice""></h3>', '</div>', '\n    <script>', 'function myValidator(item) {', '\xa0 var obj = appml(""Form01"");', '\n    \xa0 obj.message = ""validate"";', '\xa0 obj.validate = {};', '\xa0 obj.validate.item = \n    item.id;', '\xa0 obj.validate.value = item.value;', '\xa0 myFormController(obj);', '\n    }', 'function myListController($appml) {', '\xa0 if ($appml.message == \n    ""done"") {', '\xa0\xa0\xa0 var i, x, tot = 0;', '\xa0\xa0\xa0 x = $appml.data.records;', '\xa0\xa0\xa0 \n    for (i = 0; i < x.length; i++) {', '\xa0\xa0\xa0\xa0\xa0 tot += Number(x[i].Price);', '\xa0\xa0\xa0 \n    }', '\xa0\xa0\xa0 document.getElementById(""sumprice"").innerHTML = x.length + "" \n    products. Total price: $"" + tot.toFixed(2);', '\xa0 }', '\xa0 if ($appml.message \n    == ""display"") {', '\xa0\xa0\xa0 if ($appml.display.name == ""ProductName"") {', '\xa0\xa0\xa0\xa0\xa0 \n    $appml.display.value = $appml.display.value.toUpperCase();', '\xa0\xa0\xa0 }', '\xa0 }', '\n    }', '\n', 'function myFormController($appml) {', '\xa0 if ($appml.message == ""ready"") \n    {', '\xa0\xa0\xa0 $appml.appName = ""Form01"";', '\xa0\xa0\xa0 $appml.dataSource = \n    ""appml.php?model=model_productsform"";', '\xa0\xa0\xa0 return -1;', '\xa0 }', '\xa0 if \n    ($appml.message == ""loaded"") {', '\xa0\xa0\xa0 \n    document.getElementById(""Form01"").style.display = """";', '\xa0 }', '\xa0 if \n    ($appml.message == ""submit"") {', '\xa0\xa0\xa0 if \n    (isNaN(document.getElementById(""Price"").value)) { ', '\xa0\xa0\xa0\xa0\xa0 \n    $appml.setError(15, ""Price must be a number"");', '\xa0\xa0\xa0\xa0\xa0 return -1; ', '\xa0\xa0\xa0 }', '\n    \xa0 }', '\xa0 if ($appml.message == ""validate"") {', '\xa0\xa0\xa0 if ($appml.validate.item \n    == ""Price"") { ', '\xa0\xa0\xa0\xa0\xa0 if (isNaN($appml.validate.value)) { ', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n    $appml.setError(15, ""Price must be a number"");', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 return; ', '\xa0\xa0\xa0\xa0\xa0 \n    }', '\xa0\xa0\xa0 }', '\xa0 }', '}', '</script>', '</body>', '</html>\n']]"
AppML Cases,Case Suppliers,https://www.w3schools.com/appml/appml_case_suppliers.asp,This is the HTML source:|||These are the models used in the application:,,,,,"[['\n    <!DOCTYPE html>', '<html lang=""en-US"">', '<head>', '<meta charset=""utf-8"">', '\n    <title>Suppliers</title>', '<link rel=""stylesheet"" \n    href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    </head>', '<body>', '<div class=""w3-container w3-content"">', '\n    <h1>Suppliers</h1>', '<div id=""Form01"" class=""w3-container w3-light-grey \n    w3-padding-large w3-margin-bottom"" \n    appml-data=""appml.php?model=model_suppliersform"" \n    appml-controller=""myFormController"" style=""display:none;"">', '\xa0 <div \n    appml-include-html=""inc_formcommands.htm""></div>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>SupplierID:</label>', '\xa0\xa0\xa0 <input id=""SupplierID"" class=""w3-input \n    w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>SupplierName:</label>', '\xa0\xa0\xa0 \n    <input id=""SupplierName"" class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\n    \xa0\xa0\xa0 <label>ContactName:</label>', '\xa0\xa0\xa0 <input id=""ContactName"" \n    class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>Address:</label>', '\xa0\xa0\xa0 <input id=""Address"" class=""w3-input \n    w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>PostalCode:</label>', '\xa0\xa0\xa0 \n    <input id=""PostalCode"" class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>City:</label>', '\xa0\xa0\xa0 <input id=""City"" class=""w3-input w3-border"">', '\n    \xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Country:</label>', '\xa0\xa0\xa0 <input id=""Country"" \n    class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Phone:</label>', '\n    \xa0\xa0\xa0 <input id=""Phone"" class=""w3-input w3-border"">', '\xa0 </p>', '</div>', '\n    <div appml-data=""appml.php?model=model_supplierslist"">', '\n    <div appml-include-html=""inc_listcommands.htm""></div>', '<div \n    appml-include-html=""inc_filter.htm""></div>', '\n    <div class=""w3-responsive"">', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th></th>', '\xa0\xa0\xa0 <th>Supplier</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0\xa0\xa0 <th></th>', '\xa0 </tr>', '\xa0 <tr \n    appml-repeat=""records"">', '\xa0\xa0\xa0 <td style=""cursor:pointer"" \n    onclick=""appml(\'Form01\').run({{SupplierID}})"">&#9998;</td>', '\xa0\xa0\xa0 \n    <td>{{SupplierName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0\xa0\xa0 <td><a href=\'\' \n    onclick=""openProducts({{SupplierID}});return false;"">Products</a></td>', '\xa0 \n    </tr>', '</table>', '</div>', '</div>', '\n', '<div id=""ProductsSection"" class=""w3-container w3-light-grey"" \n    appml-data=""appml.php?model=model_productslist"" \n    appml-controller=""myProductsController"" \n    style=""display:none;padding:50px;margin-top:30px;"">', '<span \n    onclick=""document.getElementById(\'ProductsSection\').style.display=\'none\';"" \n    class=""w3-button w3-xxlarge w3-right"">&times;</span>', ""\n    <h2>{{records[0]['SupplierName']}}</h2>"", '\n    <div class=""w3-responsive"">', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Product</th>', '\xa0\xa0\xa0 <th>Category</th>', '\xa0\xa0\xa0 <th>Supplier</th>', '\xa0 \n    </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 <td>{{ProductName}}</td>', '\n    \xa0\xa0\xa0 <td>{{CategoryName}}</td>', '\xa0\xa0\xa0 <td>{{SupplierName}}</td>', '\xa0 </tr>', '\n    </table>', '</div>', '</div>', '\n    </div>', '<script>', 'function openProducts(id) {', '\xa0 \n    appml(""ProductsSection"").clearQuery();', '\xa0 \n    appml(""ProductsSection"").setQuery(""Products.SupplierID"", id); ', '\xa0 \n    appml(""ProductsSection"").run();', '\xa0 \n    document.getElementById(""ProductsSection"").style.display = """"; ', '}', '\n    function myFormController($appml) {', '\xa0 if ($appml.message == ""ready"") \n    {return -1;}', '\xa0 if ($appml.message == ""loaded"") {', '\xa0\xa0\xa0 \n    document.getElementById(""Form01"").style.display = """";', '\xa0 }', '}', '\n    function myProductsController($appml) {', '\xa0 if ($appml.message == ""ready"") \n    {return -1;}', '}', '</script>', '</body>', '</html>\n']]"
AppML Cases,Case Shippers,https://www.w3schools.com/appml/appml_case_shippers.asp,This is the HTML source:|||These are the models used in the application:,,,,,"[['\n    <!DOCTYPE html>', '<html lang=""en-US"">', '<head>', '<meta charset=""utf-8"">', '\n    <title>Shippers</title>', '<link rel=""stylesheet"" \n    href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    </head>', '<body>', '<div class=""w3-container w3-content"">', '\n    <h1>Shippers</h1>', '<div id=""Form01"" class=""w3-container w3-light-grey \n    w3-padding-large w3-margin-bottom"" \n    appml-data=""appml.php?model=model_shippersform"" \n    appml-controller=""myFormController"" style=""display:none;"">', '\xa0 <div \n    appml-include-html=""inc_formcommands.htm""></div>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>ShipperName:</label>', '\xa0\xa0\xa0 <input id=""ShipperName"" class=""w3-input \n    w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Phone:</label>', '\xa0\xa0\xa0 <input \n    id=""Phone"" class=""w3-input w3-border"">', '\xa0 </p>', '</div>', '<div \n    appml-data=""appml.php?model=model_shipperslist"">', '\n    <div appml-include-html=""inc_listcommands_nofilter.htm""></div>', '<table \n    class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th></th>', '\xa0\xa0\xa0 <th>Shipper</th>', '\n    \xa0\xa0\xa0 <th>Phone</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 <td \n    style=""cursor:pointer"" \n    onclick=""appml(\'Form01\').run({{ShipperID}})"">&#9998;</td>', '\xa0\xa0\xa0 \n    <td>{{ShipperName}}</td>', '\xa0\xa0\xa0 <td>{{Phone}}</td>', '\xa0 </tr>', '</table>', '\n    </div>', '</div>', '<script>', 'function myFormController($appml) {', '\xa0 \n    if ($appml.message == ""ready"") {return -1;}', '\xa0 if ($appml.message == \n    ""loaded"") {', '\xa0\xa0\xa0 document.getElementById(""Form01"").style.display = """";', '\n    \xa0 }', '}', '\n    </script>', '</body>', '</html>\n']]"
AppML Cases,Case Categories,https://www.w3schools.com/appml/appml_case_categories.asp,This is the HTML source:|||These are the models used in the application:,,,,,"[['\n    <!DOCTYPE html>', '<html lang=""en-US"">', '<head>', '<meta charset=""utf-8"">', '\n    <title>Categories</title>', '<link rel=""stylesheet"" \n    href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    </head>', '<body>', '<div class=""w3-container w3-content"">', '\n    <h1>Categories</h1>', '<div id=""Form01"" class=""w3-container w3-light-grey \n    w3-padding-large w3-margin-bottom"" \n    appml-data=""appml.php?model=model_categoriesform"" \n    appml-controller=""myFormController"" style=""display:none;"">', '\xa0 <div \n    appml-include-html=""inc_formcommands.htm""></div>', '\xa0 <p>', '\xa0\xa0\xa0 \n    <label>CategoryName:</label>', '\xa0\xa0\xa0 <input id=""CategoryName"" class=""w3-input \n    w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Description:</label>', '\xa0\xa0\xa0 \n    <input id=""Description"" class=""w3-input w3-border"">', '\xa0 </p>', '</div>', '\n    <div appml-data=""appml.php?model=model_categorieslist"">', '\n    <div appml-include-html=""inc_listcommands_nofilter.htm""></div>', '<table \n    class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th></th>', '\xa0\xa0\xa0 <th>Category</th>', '\n    \xa0\xa0\xa0 <th>Description</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td style=""cursor:pointer"" \n    onclick=""appml(\'Form01\').run({{CategoryID}})"">&#9998;</td>', '\xa0\xa0\xa0 \n    <td>{{CategoryName}}</td>', '\xa0\xa0\xa0 <td>{{Description}}</td>', '\xa0 </tr>', '\n    </table>', '</div>', '</div>', '<script>', 'function \n    myFormController($appml) {', '\xa0 if ($appml.message == ""ready"") {return -1;}', '\n    \xa0 if ($appml.message == ""loaded"") {', '\xa0\xa0\xa0 \n    document.getElementById(""Form01"").style.display = """";', '\xa0 }', '}', '\n    </script>', '</body>', '</html>']]"
AppML Cases,Case Employees,https://www.w3schools.com/appml/appml_case_employees.asp,This is the HTML source:|||These are the models used in the application:,,,,,"[['\n    <!DOCTYPE html>', '<html lang=""en-US"">', '<head>', '<meta charset=""utf-8"">', '\n    <title>Employees</title>', '<link rel=""stylesheet"" \n    href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    </head>', '<body>', '<div class=""w3-container w3-content"">', '\n    <h1>Employees</h1>', '<div id=""Form01"" class=""w3-container w3-light-grey \n    w3-padding-large w3-margin-bottom"" \n    appml-data=""appml.php?model=model_employeesform"" \n    appml-controller=""myFormController"" style=""display:none;"">', '\xa0 <div \n    appml-include-html=""inc_formcommands.htm""></div>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Last \n    Name:</label>', '\xa0\xa0\xa0 <input id=""LastName"" class=""w3-input w3-border"">', '\xa0 \n    </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>First Name:</label>', '\xa0\xa0\xa0 <input id=""FirstName"" \n    class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Date of \n    Birth:</label>', '\xa0\xa0\xa0 <input id=""BirthDate"" class=""w3-input w3-border"">', '\xa0 \n    </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Photo:</label>', '\xa0\xa0\xa0 <input id=""Photo"" \n    class=""w3-input w3-border"">', '\xa0 </p>', '\xa0 <p>', '\xa0\xa0\xa0 <label>Notes:</label>', '\n    \xa0\xa0\xa0 <input id=""Notes"" class=""w3-input w3-border"">', '\xa0 </p>', '</div>', '\n    <div appml-data=""appml.php?model=model_employeeslist"">', '\n    <div appml-include-html=""inc_listcommands.htm""></div>', '<div \n    appml-include-html=""inc_filter.htm""></div>', '\n    <table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th></th>', '\xa0\xa0\xa0 <th>Last \n    Name</th>', '\xa0\xa0\xa0 <th>First Name</th>', '\xa0\xa0\xa0 <th>Date of Birth</th>', '\xa0 \n    </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0 <td style=""cursor:pointer"" \n    onclick=""appml(\'Form01\').run({{EmployeeID}})"">&#9998;</td>', '\xa0\xa0\xa0 \n    <td>{{LastName}}</td>', '\xa0\xa0\xa0 <td>{{FirstName}}</td>', '\xa0\xa0\xa0 \n    <td>{{BirthDate}}</td>', '\xa0 </tr>', '</table>', '</div>', '</div>', '\n', '<script>', 'function myFormController($appml) {', '\xa0 if ($appml.message \n    == ""ready"") {return -1;}', '\xa0 if ($appml.message == ""loaded"") {', '\xa0\xa0\xa0 \n    document.getElementById(""Form01"").style.display = """";', '\xa0 }', '}', '\n    </script>', '</body>', '</html>']]"
AppML Client,AppML Client,https://www.w3schools.com/appml/appml_client.asp,"In the following chapters, we will build a web application in the web browser.|||The AppML client is a JavaScript that runs in any web browser.|||It can easily be added to any HTML page with a single line of code:|||The AppML client lets you add external data to any HTML element, using HTML attributes:|||It has a built in function for displaying data anywhere in the HTML:|||{{ ... }} Are placeholders for AppML data.|||It also has built in functions for repeating HTML elements, using any array found in the data:|||The AppML client will not interfere with the existing HTML or CSS.|||It works well with any existing CSS. We have used W3.CSS in our examples.|||AppML is extremely efficient for building web applications.|||One of the most powerful features is the ability to develop prototype applications in the web browser, including database CRUD applications, without the need of any web server.|||CRUD: Create, Read, Update, Delete.|||AppML comes with two server scripts (PHP and .NET) designed to provide server data.|||With AppML server scripts, you can easily access SQL databases, like mySQL and SQL server.|||The server scripts are very powerful, and can easily be installed on any PHP or .NET server. |||In addition, for rapid application development and prototyping, AppML can also simulate a web server in the browser, using Web SQL.|||Web SQL is a web page API for storing data in the browser using SQL. The API is supported by Google Chrome, Opera, Safari, and the Android Browser.|||Just add the following script to your web page:",,,,,"[['\n<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>\n'], ['\n <table appml-data=""customers.js"">\n'], ['\n <td>{{CustomerName}}</td>'], ['\n <tr', <strong> </strong>, 'appml-repeat=""records"">', '..', '.', '</tr>'], ['\n<script src=""https://www.w3schools.com/appml/2.0.3/appml_sql.js""></script>\n']]"
AppML Client,AppML Prototype,https://www.w3schools.com/appml/appml_prototype.asp,"In this chapter, we will build a prototype for a web application.|||First, create a decent HTML prototype, using your favorite CSS. |||We have used W3.CSS in this example:|||{{ ... }} Are placeholders for future data.|||After you have created an HTML prototype, you can add AppML:|||Add AppML:|||<script src=""https://www.w3schools.com/appml/2.0.3/appml.js"">|||Add a local WebSQL database:|||<script src=""https://www.w3schools.com/appml/2.0.3/appml_sql.js"">|||Define a data source:|||appml-data=""customers.js""|||Define the HTML element to be repeated for each record in records:|||appml_repeat=""records""|||To make it simple, start with local data like  customers.js before connecting to a database.|||To be able to use a database, you will need an AppML database model:|||If you don't have a local database, you can use the AppML model to create a Web SQL database.|||To create a table with a single record, use a model like this: proto_customers_single.js.|||Creating a local database does not work in IE or Firefox. Use Chrome or Safari.|||Use the model in your application. Change the data source to local?model=proto_customers_single:|||To create a table with multiple records, use a model like this: proto_customers_all.js.|||Change the data source to local?model=proto_customers_all|||Suppose you want all your applications to have a common navigation toolbar:|||Create an HTML template for it:|||Save the template in a file with a proper name like ""inc_listcommands.htm"".|||Include the template in your prototype with the attribute appml-include-html:",Create a Local Database with Multiple Records,,,,"[['\n<!DOCTYPE html>', '<html lang=""en-US"">', '<title>Customers</title>', '\n <link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css""> ', '\n<body>', '\n', '<div class=""w3-container"">', '<h1>Customers</h1>', '\n <table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th>Customer</th>', '\xa0\xa0\xa0 \n <th>City</th>', '\xa0\xa0\xa0 <th>Country</th>', '\xa0 </tr>', '\xa0 \n <tr>', '\xa0\xa0\xa0 <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 \n <td>{{City}}</td>', '\xa0\xa0\xa0 <td>{{Country}}</td>', '\xa0 </tr>', '\n </table>', '\n </div>', '\n', '</body>', '</html>\n'], ['\n<!DOCTYPE html>', '<html lang=""en-US"">', '\n    <title>Customers</title>', '<link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n', <strong>&lt;script src=""https://www.w3schools.com/appml/2.0.3/appml.js""&gt;&lt;/script&gt;<br/>
    &lt;script src=""https://www.w3schools.com/appml/2.0.3/appml_sql.js""&gt;&lt;/script&gt;<br/>
</strong>, '<body>', '<div class=""w3-container"" ', <strong>appml-data=""customers.js""</strong>, '>', '\n    <h1>Customers</h1>', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr', <strong> appml-repeat=""records""</strong>, '>', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '</div>', '</body>', '</html>\n'], ['\n    <div class=""w3-container"" appml-data=""', <strong>local?model=proto_customers_single</strong>, '"">', '\n    <h1>Customers</h1>', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '</div>'], ['\n    <div class=""w3-container"" appml-data=""', <strong>local?model=proto_customers_all</strong>, '"">', '\n    <h1>Customers</h1>', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '</div>'], ['\n<div class=""w3-bar w3-border w3-section"">', '\n<button class=""w3-button"" id=\'appmlbtn_first\'>&#10094;&#10094;</button>', '\n<button class=""w3-button"" id=\'appmlbtn_previous\'>&#10094;</button>', '\n<button class=""w3-button w3-hover-none"" id=\'appmlbtn_text\'></button>', '\n<button class=""w3-button"" id=\'appmlbtn_next\'>&#10095;</button>', '\n<button class=""w3-button"" id=\'appmlbtn_last\'>&#10095;&#10095;</button>', '\n<button class=""w3-btn ws-green"" id=\'appmlbtn_query\'>Filter</button>', '\n</div>', '\n<div id=""appmlmessage""></div>\n'], ['\n     <div class=""w3-container"" appml-data=""local?model=proto_customers_all"">', '\n     <h1>Customers</h1>', '<div ', <strong>appml-include-html=""inc_listcommands.htm""</strong>, '></div>', '\n', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 <th>Customer</th>', '\xa0\xa0\xa0 \n     <th>City</th>', '\xa0\xa0\xa0 <th>Country</th>', '\xa0 </tr>', '\xa0 \n     <tr appml-repeat=""records"">', '\xa0\xa0\xa0 <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 \n     <td>{{City}}</td>', '\xa0\xa0\xa0 <td>{{Country}}</td>', '\xa0 </tr>', '\n     </table>', '</div>']]"
AppML Client,AppML Lists,https://www.w3schools.com/appml/appml_lists.asp,"In this chapter, we will list records from a database.|||The examples on this page use a local SQL database.Local SQL databases does not work in IE or Firefox. Use Chrome or Safari.|||In the previous chapter, you used a model to create a database.|||Now create a new model, including filter and sort definitions:|||Use the model in your application:|||Create the HTML for your filters:|||Save the filter HTML in a file with a proper name like ""inc_filter.htm"".|||Include the filter HTML in your prototype with appml-include-html:",,,,,"[['\n  <div appml-data=""', <strong>local?model=model_customerslist</strong>, '"">', '\n  <h1>Customers</h1>', '\n  <div appml-include-html=""inc_listcommands.htm""></div>', '\n  <table class=""w3-table-all"">', '\n  \xa0 <tr>', '\n  \xa0\xa0\xa0 <th>Customer</th>', '\n  \xa0\xa0\xa0 <th>City</th>', '\n  \xa0\xa0\xa0 <th>Country</th>', '\n  \xa0 </tr>', '\n  \xa0 <tr appml-repeat=""records"">', '\n  \xa0\xa0\xa0 <td>{{CustomerName}}</td>', '\n  \xa0\xa0\xa0 <td>{{City}}</td>', '\n  \xa0\xa0\xa0 <td>{{Country}}</td>', '\n  \xa0 </tr>', '\n  </table>', '\n  </div>'], ['\n  <div id=""appml_filtercontainer"" class=""w3-container w3-light-grey w3-section \n  w3-padding-large"" style=""display:none;"">', '\n  \xa0 <span id=""appmlbtn_queryClose"" \n  onclick=""this.parentNode.style.display=\'none\';"" class=""w3-button w3-large \n  w3-right"">&times;</span>', '\n  \xa0 <h2>Filter</h2>', '\n  \xa0 <div id=""appml_filter"">', '\n  \xa0\xa0\xa0 <div appml-repeat=""filteritems"">', '\n  \xa0\xa0\xa0\xa0\xa0 <div class=""w3-row"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 <div class=""w3-col m4"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <label>{{label||item}}:</label>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 </div>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 <div class=""w3-col m2"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <input id=""appml_datatype_{{item}}"" type=\'hidden\'>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <select id=""appml_operator_{{item}}"" class=""w3-select w3-border"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option value=""0"">=</option>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option value=""1"">&lt;&gt;</option>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option value=""2"">&lt;</option>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option value=""3"">&gt;</option>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option value=""4"">&lt;=</option>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option value=""5"">&gt;=</option>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option value=""6"">%</option>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 </select>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 </div>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 <div class=""w3-col m6"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <input id=""appml_query_{{item}}"" class=""w3-input w3-border"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 </div>', '\n  \xa0\xa0\xa0\xa0\xa0 </div>', '\n  \xa0\xa0\xa0 </div>', '\n  \xa0 </div>', '\n  \xa0 <div id=""appml_orderby"">', '\n  \xa0\xa0\xa0 <h2>Order By</h2>', '\n  \xa0\xa0\xa0 <div class=""w3-row"">', '\n  \xa0\xa0\xa0\xa0\xa0 <div class=""w3-col m5"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 <select id=\'appml_orderselect\' class=""w3-select w3-border"">', ""\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option value=''></option>"", '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 <option appml-repeat=""sortitems"" value=""{{item}}"">{{label || \n  item}}</option>', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 </select>', '\n  \xa0\xa0\xa0\xa0\xa0 </div>', '\n  \xa0\xa0\xa0\xa0\xa0 <div class=""w3-col m7"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 ASC <input type=\'radio\' id=""appml_orderdirection_asc"" \n  name=\'appml_orderdirection\' value=\'asc\' class=""w3-radio"">', '\n  \xa0\xa0\xa0\xa0\xa0\xa0\xa0 DESC <input type=\'radio\' id=""appml_orderdirection_desc"" \n  name=\'appml_orderdirection\' value=\'desc\' class=""w3-radio"">', '\n  \xa0\xa0\xa0\xa0\xa0 </div>', '\n  \xa0\xa0\xa0 </div>', '\n  \xa0 </div>', '\n  \xa0 <br>', '\n  \xa0 <button id=""appmlbtn_queryOK"" type=""button"" class=""w3-btn \n  w3-green"">OK</button>', '\n  </div>\n'], ['\n  <div appml-data=""local?model=model_customerslist"">', '\n  <h1>Customers</h1>', '\n  <div appml-include-html=""inc_listcommands.htm""></div>', '\n  <div ', <strong>appml-include-html=""inc_filter.htm""</strong>, '></div>', '\n  <table class=""w3-table-all"">', '\n  \xa0 <tr>', '\n  \xa0\xa0\xa0 <th>Customer</th>', '\n  \xa0\xa0\xa0 <th>City</th>', '\n  \xa0\xa0\xa0 <th>Country</th>', '\n  \xa0 </tr>', '\n  \xa0 <tr appml-repeat=""records"">', '\n  \xa0\xa0\xa0 <td>{{CustomerName}}</td>', '\n  \xa0\xa0\xa0 <td>{{City}}</td>', '\n  \xa0\xa0\xa0 <td>{{Country}}</td>', '\n  \xa0 </tr>', '\n  </table>', '\n  </div>']]"
AppML Client,AppML Forms,https://www.w3schools.com/appml/appml_forms.asp,"This chapter demonstrates how to construct an input form against a database.|||The examples on this page use a local SQL database.  Local SQL databases does not work in IE or Firefox. Use Chrome or Safari.|||In the previous chapter, you created an application for listing records from a database.|||Now add a form application to the page:|||appml-data=""local?model=model_customersform"" defines the AppML application for the form.|||Use your favorite style sheet (we use bootstrap), and create your wanted form commands:|||Include the form commands in in your form:|||In the previous chapter, you created an application for listing records from a database.|||Now add a new column to the table:|||The onclick event (in the new column) triggers a call to run an AppML application located in the HTML element with id=""Form01"":|||Add a style to the form to make it invisible:|||Add a controller to the form, to display the form only when it is loaded and ready to display data:",,appml('Form01') returns the AppML application@@@run({{CustomerID}}) runs the applications with CustomerID  as parameter.,,,"[['\n    <div id=""Form01"" class=""w3-container w3-light-grey w3-padding-large \n    w3-margin-bottom"" appml-data=""local?model=model_customersform"">', '<p>', '\n    <label for=""customername"">Customer:</label>', '<input id=""customername"" \n    class=""w3-input w3-border"">', '</p>', '<p>', '<label \n    for=""address"">Address:</label>', '<input id=""address"" class=""w3-input \n    w3-border"">', '</p>', '<p>', '<label for=""city"">City:</label>', '<input \n    id=""city"" class=""w3-input w3-border"">', '</p>', '<p>', '<label \n    for=""postalcode"">Postal Code:</label>', '<input id=""postalcode"" \n    class=""w3-input w3-border"">', '</p>', '\n', '<p>', '<label for=""country"">Country:</label>', '<input id=""country"" \n    class=""w3-input w3-border"">', '</p>', '</div>'], ['\n    <span onclick=""document.getElementById(\'Form01\').style.display=\'none\'"" \n    class=""w3-button w3-xlarge w3-right"">&times;</span>', '<div \n    class=""w3-bar w3-border w3-white"">', '<button \n    onclick=""appml(\'Form01\').newRecord();"" class=""w3-btn"">New</button>', '\n    <button onclick=""appml(\'Form01\').saveRecord();"" class=""w3-btn \n    w3-green"">Save</button>', '<button onclick=""appml(\'Form01\').deleteRecord();"" \n    class=""w3-btn"">Delete</button> ', '</div>', '<div id=""appmlmessage"" \n    class=""w3-container w3-pale-yellow w3-padding"" style=""display:none;"">', '\n    <span onclick=""this.parentNode.style.display=\'none\';"" class=""w3-button \n    w3-xlarge w3-right"">&times;</span>', '<div id=""message""></div>', '</div>\n'], ['\n    <div id=""Form01"" class=""w3-container w3-light-grey w3-padding-large \n    w3-margin-bottom"" appml-data=""local?model=model_customersform"">', '\n', <strong>&lt;div appml-include-html=""inc_formcommands.htm""&gt;&lt;/div&gt;<br/></strong>, '\n', '<p>', '<label for=""customername"">Customer:</label>', '<input \n    id=""customername"" class=""w3-input w3-border"">', '</p>', '<p>', '<label \n    for=""address"">Address:</label>', '<input id=""address"" class=""w3-input \n    w3-border"">', '</p>', '<p>', '<label for=""city"">City:</label>', '<input \n    id=""city"" class=""w3-input w3-border"">', '</p>', '<p>', '<label \n    for=""postalcode"">Postal Code:</label>', '<input id=""postalcode"" \n    class=""w3-input w3-border"">', '</p>', '\n', '<p>', '<label for=""country"">Country:</label>', '<input id=""country"" \n    class=""w3-input w3-border"">', '</p>', '</div>', '\n'], ['\n    <div appml-data=""local?model=model_customerslist"">', '\n    <h1>Customers</h1>', '<div appml-include-html=""inc_listcommands.htm""></div>', '\n    <div appml-include-html=""inc_filter.htm""></div>', '<table \n    class=""w3-table-all"">', '\xa0 <tr>', <strong>    &lt;th&gt;&lt;/th&gt;<br/>  
    </strong>, '<th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 <th>Country</th>', '\xa0 \n    </tr>', '\xa0 <tr appml-repeat=""records"">', '\n', <strong>    &lt;td style=""cursor:pointer;width:34px;"" 
    onclick=""appml('Form01').run({{CustomerID}})""&gt;&amp;#9998;&lt;/td&gt;<br/>
</strong>, '\xa0\xa0\xa0 <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '\n    </table>', '\n', '</div>\n'], ['\n  <div id=""Form01"" appml-data=""local?model=model_customersform""', '\n  appml-controller=""myFormController""', '\n  class=""jumbotron"" ', <strong>style=""display:none""</strong>, '>\n'], ['\n    <script>', 'function myFormController($appml) {', '\xa0\xa0\xa0 if ($appml.message == \n    ""ready"") {return -1;}', '\xa0\xa0\xa0 if ($appml.message == ""loaded"") {', '\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n    document.getElementById(""Form01"").style.display="""";', '\xa0\xa0\xa0 }', '\n    }', '</script>']]"
AppML Client,AppML WebSQL,https://www.w3schools.com/appml/appml_database.asp,"With the small utility below, you can use AppML to create your own Web SQL database.|||Write your own SQL, or use the buttons to import existing SQL.|||WebSQL only works in Chrome and Safari.|||CustomersProductsSuppliersShippersCategoriesEmployeesOrders||| Run SQL ",,,,,[]
AppML Server,AppML PHP,https://www.w3schools.com/appml/appml_php.asp,"If you have access to a PHP server, follow the instructions below to create an AppML server application.|||Create a test page and save on your PHP server as customers.htm (or anything you like):|||Test the web page in your browser.|||If you have access to a Database, follow the instructions below to create an AppML database connection.|||Define a database connection, and save it on the server as appml_config.php:|||The connection above is not real. Names and passwords are examples.|||Download the file: https://www.w3schools.com/appml/2.0.3/appml.php.txt.|||Copy the file to your web site. Rename it to appml.php.|||Create a model for creating a Customers table in the database. Save it as create_customers.js:|||Create an HTML page for running the create_customers.js model:|||Run the HTML page in your browser.|||Create a model for the customers application. Save it asmodel_customers.js:|||Create an HTML page for running the customers application:|||Run the HTML in your browser.",,,,dateformat|||The date format you will use in your models&&&connection|||The connection name you will use in your models&&&host|||The IP or hostname for the database&&&dbname|||The database name&&&username|||The database user name&&&password|||The database password,"[['\n <!DOCTYPE html>', '\n    <html lang=""en"">', '<head>', '<title>Customers</title>', '<link rel=""stylesheet"" \n    href=""https://www.w3schools.com/w3css/4/w3.css"">', '<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    </head>', '<body>', '<div class=""w3-container"" appml-data=""customers"">', '\n    <h1>Customers</h1>', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}} </td>', '\xa0\xa0\xa0 \n    <td>{{Country}} </td>', '\xa0 </tr>', '</table>', '</div>', '<script>', '\n    var customers = {', '""records"":[', '{""CustomerName"":""Alfreds Futterkiste"",""City"":""Berlin"",""Country"":""Germany""},', '\n    {""CustomerName"":""Ana Trujillo Emparedados y helados"",""City"":""México D.F."",""Country"":""Mexico""},', '\n    {""CustomerName"":""Antonio Moreno Taquería"",""City"":""México D.F."",""Country"":""Mexico""},', '\n    {""CustomerName"":""Around the Horn"",""City"":""London"",""Country"":""UK""},', '{""CustomerName"":""B\'s \n    Beverages"",""City"":""London"",""Country"":""UK""},', '{""CustomerName"":""Berglunds \n    snabbköp"",""City"":""Luleå"",""Country"":""Sweden""},', '{""CustomerName"":""Blauer See \n    Delikatessen"",""City"":""Mannheim"",""Country"":""Germany""},', '{""CustomerName"":""Blondel \n    père et fils"",""City"":""Strasbourg"",""Country"":""France""},', '{""CustomerName"":""Bólido \n    Comidas preparadas"",""City"":""Madrid"",""Country"":""Spain""},', '{""CustomerName"":""Bon \n    app\'"",""City"":""Marseille"",""Country"":""France""},', '{""CustomerName"":""Bottom-Dollar \n    Marketse"",""City"":""Tsawassen"",""Country"":""Canada""},', '{""CustomerName"":""Cactus \n    Comidas para llevar"",""City"":""Buenos Aires"",""Country"":""Argentina""},', '{""CustomerName"":""Centro \n    comercial Moctezuma"",""City"":""México D.F."",""Country"":""Mexico""},', '{""CustomerName"":""Chop-suey \n    Chinese"",""City"":""Bern"",""Country"":""Switzerland""},', '{""CustomerName"":""Comércio \n    Mineiro"",""City"":""São Paulo"",""Country"":""Brazil""}', ']};', '</script>', '\n    </body>', '</html>\n'], ['\n<?php echo(""Access Forbidden"");exit();?>', '\n{', '\n""dateformat"" : ""yyyy-mm-dd"",', '\n""databases"" : [{', '\n\xa0\xa0\xa0 ""connection"" : ""mydatabase"",', '\xa0\xa0\xa0 ""host"" : ""localhost"",', '\n\xa0\xa0\xa0 ""dbname"" : ""DemoDB"",', '\n\xa0\xa0\xa0 ""username"" : ""DemoDBUkbn5"",', '\n\xa0\xa0\xa0 ""password"" : ""l6|U6=V(*T+P"" ', '\n }]', '}\n'], ['\n <!DOCTYPE html>', '<html>', '<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '<body>', '<div appml-data=""appml.php?model=create_customers""></div>', '</body>', '</html>'], ['\n <!DOCTYPE html>', '<html lang=""en"">', '<title>Customers</title>', '<link \n    rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">', '<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    <body>', '<div class=""w3-container"" appml-data=""appml.php?model=model_customers"">', '\n    <h1>Customers</h1>', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '</div>', '</body>', '</html>\n']]"
AppML Server,AppML ASP,https://www.w3schools.com/appml/appml_dotnet.asp,"If you have access to a .NET server, follow the instructions below to create an AppML server application.|||Create a test page and save on your PHP server as customers.htm (or anything you like):|||Test the web page in your browser.|||If you have access to an SQL Server database, or any other OLEDB databases (like MS Acess) define the database connections, and save it on the server as appml_config.aspx:|||The connection above is not real. Names and passwords are examples.|||Download the file: https://www.w3schools.com/appml/2.0.3/appml.aspx.txt.|||Copy the file to your web site. Rename it to appml.aspx.|||Create a model for creating a Customers table in the database.|||Create an HTML page for running the create_customers.js model:|||Run the HTML page in your browser.|||Create a model for the customers application. Save it ascustomers.js:|||Create an HTML page for running the customers application:|||Run the HTML in your browser.",,,,dateformat|||The date format you will use in your models&&&connection|||The connection name you will use in your models&&&connectionstring|||Typically used in for OLEDB drivers like MS Access&&&provider|||The driver/provider of db software&&&host|||The IP or hostname for the database&&&dbname|||The database name&&&username|||The database user name&&&password|||The database password,"[['\n <!DOCTYPE html>', '\n    <html lang=""en"">', '<title>Customers</title>', '<link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    <body>', '<div class=""w3-container"" appml-data=""customers"">', '\n    <h1>Customers</h1>', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}} </td>', '\xa0\xa0\xa0 \n    <td>{{Country}} </td>', '\xa0 </tr>', '</table>', '</div>', '<script>', '\n    var customers = {', '""records"":[', '{""CustomerName"":""Alfreds Futterkiste"",""City"":""Berlin"",""Country"":""Germany""},', '\n    {""CustomerName"":""Ana Trujillo Emparedados y helados"",""City"":""México D.F."",""Country"":""Mexico""},', '\n    {""CustomerName"":""Antonio Moreno Taquería"",""City"":""México D.F."",""Country"":""Mexico""},', '\n    {""CustomerName"":""Around the Horn"",""City"":""London"",""Country"":""UK""},', '{""CustomerName"":""B\'s \n    Beverages"",""City"":""London"",""Country"":""UK""},', '{""CustomerName"":""Berglunds \n    snabbköp"",""City"":""Luleå"",""Country"":""Sweden""},', '{""CustomerName"":""Blauer See \n    Delikatessen"",""City"":""Mannheim"",""Country"":""Germany""},', '{""CustomerName"":""Blondel \n    père et fils"",""City"":""Strasbourg"",""Country"":""France""},', '{""CustomerName"":""Bólido \n    Comidas preparadas"",""City"":""Madrid"",""Country"":""Spain""},', '{""CustomerName"":""Bon \n    app\'"",""City"":""Marseille"",""Country"":""France""},', '{""CustomerName"":""Bottom-Dollar \n    Marketse"",""City"":""Tsawassen"",""Country"":""Canada""},', '{""CustomerName"":""Cactus \n    Comidas para llevar"",""City"":""Buenos Aires"",""Country"":""Argentina""},', '{""CustomerName"":""Centro \n    comercial Moctezuma"",""City"":""México D.F."",""Country"":""Mexico""},', '{""CustomerName"":""Chop-suey \n    Chinese"",""City"":""Bern"",""Country"":""Switzerland""},', '{""CustomerName"":""Comércio \n    Mineiro"",""City"":""São Paulo"",""Country"":""Brazil""}', ']};', '</script>', '\n    </body>', '</html>\n'], ['\n <!DOCTYPE html>', '<html>', '<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '<body>', '<div appml-data=""appml.aspx?model=create_customers""></div>', '</body>', '</html>'], ['\n <!DOCTYPE html>', '\n    <html lang=""en"">', '<title>Customers</title>', '<link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n    <script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n    <body>', '<div class=""w3-container"" appml-data=""appml.aspx?model=model_customers"">', '\n    <h1>Customers</h1>', '<table class=""w3-table-all"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '</div>', '</body>', '</html>\n']]"
AppML Cloud,Google Cloud SQL,https://www.w3schools.com/appml/appml_google_cloud_sql.asp,"Google Cloud SQL is a database cloud service.|||It is easy to set up and manage.|||It is FREE to try!|||Google Cloud SQL is a cloud based database service.|||Google Cloud SQL offers MySQL databases deployed in the cloud without a fuss.|||Google offers powerful databases that run fast, and flexible charging (pay per use).|||Google manages automated backups, patching, and recovery.|||Before you can start using Google Cloud SQL, you need a Google account, and sign up for Google Developers Console.|||If you do not have a Google account you can sign up for one here:Create your Google Account|||When you sign up for Google Developers Console, your Google account is automatically signed up for all services in Google Cloud, including SQL.|||If you are a new Cloud Platform user, you can get started with a trial period for free.|||The Cloud Platform free trial allows you to try Cloud SQL for free for 60 days. For more information, seeCloud Platform Free Trial.|||If you decide to continue with Cloud Platform after your free period (or if you need more storage or performance than the free usage tier offers), you only pay for the resources you use.|||To create an Google Developers Console accountgo to: https://console.developers.google.com/freetrial, and follow the on-screen instructions.|||In this example we will set up a Database instance running MySQL.||| Create a MySQL DB instance:|||Now you have a Google Cloud SQL database, with an IP that you can connect to.|||To configure the database connection, edit the appml_config file:|||Edit the following:|||AppML should now be configured to connect to your Google Cloud SQL database.|||You can now fill your database with data:",,"Once you have created your account Google will automatically create a     new project for you called ""My First Project"". In this example we will just     use that project.@@@In the menu, click ""Storage"", and then ""Cloud SQL""@@@Click ""Create an instance""@@@On the ""Create Cloud SQL instance"" page select a name, region and     performance tier for your DB instance. In this example we will skip the     advanced options.@@@Click ""Create""@@@The new DB instance appears in the list of DB instances (when it has the     status ""Runnable"" it is ready for use)@@@Click on the name of the instance, and click ""Access Control"" on the     navigation pane@@@Click ""IP address"" in the sub-navigation pane, and click the ""Request     IPv4 address"" button@@@Keep this IP address, as it will be the IP address you use to connect to     your database@@@Click ""Users"" in the sub-navigation pane, and click the ""New user""     button@@@Specify a username and password for your database@@@Click ""Authorization"" in the sub-navigation pane, and click the ""+ Add     item"" button under Allowed Networks@@@Here you can specify who has access to your database, It can be:Your own IP, or the IP of your server. This way only you have access         to your databaseor 0.0.0.0/0, which allows all external IP addresses to connect         (this can be a security risk, and cause extra costs)@@@Click ""Save""@@@Click ""Databases"" in the navigation pane, and click the ""New database""     button@@@Specify a name for your database (you can leave the other options as     they are unless you have specific requirements)|||Your own IP, or the IP of your server. This way only you have access         to your database@@@or 0.0.0.0/0, which allows all external IP addresses to connect         (this can be a security risk, and cause extra costs)|||If you have access to a PHP server, this is described in the    AppML PHP chapter@@@If you have access to an ASP.NET server, this is described in the    AppML .NET chapter","mydatabase - change to whatever you want the database     connection to be called in your application@@@yourDatabaseURL - change to the IP from the previous     step, and add the port 3306 (like this 192.168.1.1:3306)@@@yourDatabaseName - change to the name of your     database instance in Google Cloud SQL@@@yourUserName - change to the username you specified for your     database in Google Cloud SQL@@@yourPassword - change to the password you specified for your     database in Google Cloud SQL",,[]
AppML Cloud,Amazon RDS SQL,https://www.w3schools.com/appml/appml_amazon_rds.asp,"Amazon RDS is a database cloud service.|||It is easy to set up and manage.|||It is FREE to try!|||Amazon Relational Database Service (RDS) is a cloud based database service.|||Amazon RDS manages many of the challenges of running a database.|||With Amazon RDS you can scale performance and storage as you need it.|||Amazon RDS manages automated backups, patching, and recovery.|||It supports popular database products like:|||Before you can start using RDS, you need to sign up for Amazon Web Services, and set up a database user and security group.|||When you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up for all services in AWS, including Amazon RDS.|||If you are a new AWS customer, you can get started with Amazon RDS for free.|||The AWS Free Tier is allows you to try AWS for free for 12 months after you sign up. For more information, seeAWS Free Usage Tier.|||If you decide to continue with AWS after your free period (or if you need more storage or performance than the free usage tier offers), you only pay for the resources you use.|||To create an AWS accountgo to: https://aws.amazon.com/, and then click Sign Up.|||Follow the on-screen instructions.Note your AWS account number, because you'll need it later.|||In this example we will set up a free Database instance running MySQL. (This is free because it is intended for testing).||| Create a MySQL DB instance:|||To configure the database connection, edit the appml_config file:|||Edit the following:|||AppML should now be configured to connect to your Amazon RDS database.|||You can now fill your database with data:|||Optional: Create an IAM User for increased security|||Amazon RDS, require that you provide username and password when you access it.|||You can access the account with your Amazon username, but for security purposes we recommend that you create an Identity and Access Management (IAM) user, for your database.|||First, create the Administrators group:|||Then create the IAM user, and add it to the Administrators group:|||To sign in as this new IAM user, sign out of the AWS console, then use the following URL:|||Replace your_aws_account_id with your AWS account number without the hyphens (if your account number is 1234-5678-9012, your AWS account ID is 123456789012)",,"MySQL@@@PostgreSQL@@@Oracle@@@Microsoft SQL Server@@@and the new, MySQL-compatible Amazon Aurora DB engine|||If you have access to a PHP server, this is described in the    AppML PHP chapter@@@If you have access to an ASP.NET server, this is described in the    AppML .NET chapter","Go to Amazon RDS console:     https://console.aws.amazon.com/rds/@@@In the navigation pane, click Instances.@@@Click Launch DB Instance@@@On the Select Engine page, click the MySQL icon and then click Select     for the MySQL DB engine@@@On the Production? page, click checkbox next to ""No, this instance is intended for use outside of production......."", and then click Next     Step@@@On the Specify DB Details page follow the instructions (follow these     instructions for setting up a free test database)For this option:Typical InputLicense Modelgeneral-public-licenseDB Engine VersionSelect the default version of MySQLDB Instance ClassSelect db.t2.micro to select a configuration that is eligible for free test usageMulti-AZ DeploymentSelect NoStorage TypeMagnetic (Standard)Allocated Storage5DB Instance IdentifierType the name of your database instance (this is not the name of your database)Master UsernameType the master username for your databaseMaster PasswordType the password for your master userConfirm PasswordConform the password@@@On the Configure Advanced Settings page follow the instructions (follow these     instructions for setting up a free test database)    For this option:Typical InputVPCDefault VPCSubnet GroupdefaultPublicly AccessibleYesAvailability ZoneNo PreferenceVPC Security Group(s)defaultDatabase NameType the name of your database (in this example, we will show you how to create the northwind database we use for examples in the AppML tutorial)Database Port3306 (unless you need it to run on a specific port)DB Parameter GroupKeep the default valueOption GroupKeep the default valueEnable EncryptionNoBackup Retention Period7Backup WindowNo PreferenceAuto Minor Version UpgradeYesMaintenance WindowNo Preference@@@Click Launch DB Instance@@@Click View Your DB Instances@@@The new DB instance appears in the list of DB instances (it will have a     ""creating"" status until it is ready for use)@@@When the status changes to ""available"", you can connect to the database@@@Click the details icon to view details and copy the URL from ""Endpoint"",     including the port|||mydatabase - change to whatever you want the database     connection to be called in your application@@@yourDatabaseURL - change to the endpoint URL from the previous     step@@@yourDatabaseName - change to the name you specified for your     database in Amazon RDS@@@yourUserName - change to the username you specified for your     database in Amazon RDS@@@yourPassword - change to the password you specified for your     database in Amazon RDS|||Sign in to the AWS Management Console and open the IAM console at     https://console.aws.amazon.com/iam/@@@In the menu, click Groups, then click Create New Group@@@In the Group Name box, type Administrators and then click Next Step@@@In the list of policies, select the check box next to the     AdministratorAccess policy@@@Click Next Step, then click Create Group|||In the menu, click Users, then click Create New User@@@ In box 1, enter a user name@@@Clear the check box next to ""Generate an access key for each     user"", then click Create@@@In the list of users, click the name (not the check box) of the user you     just created@@@In the Groups section, click Add User to Groups@@@Select the check box next to the Administrators group, then click Add to     Groups@@@Scroll down to the Security Credentials section, and click Manage     Password@@@Select Assign a custom password, then enter a password in the Password     and Confirm Password boxes, click Apply","License Model|||general-public-license&&&DB Engine Version|||Select the default version of MySQL&&&DB Instance Class|||Select db.t2.micro to select a configuration that is eligible for free test usage&&&Multi-AZ Deployment|||Select No&&&Storage Type|||Magnetic (Standard)&&&Allocated Storage|||5&&&DB Instance Identifier|||Type the name of your database instance (this is not the name of your database)&&&Master Username|||Type the master username for your database&&&Master Password|||Type the password for your master user&&&Confirm Password|||Conform the password$$$VPC|||Default VPC&&&Subnet Group|||default&&&Publicly Accessible|||Yes&&&Availability Zone|||No Preference&&&VPC Security Group(s)|||default&&&Database Name|||Type the name of your database (in this example, we will show you how to create the northwind database we use for examples in the AppML tutorial)&&&Database Port|||3306 (unless you need it to run on a specific port)&&&DB Parameter Group|||Keep the default value&&&Option Group|||Keep the default value&&&Enable Encryption|||No&&&Backup Retention Period|||7&&&Backup Window|||No Preference&&&Auto Minor Version Upgrade|||Yes&&&Maintenance Window|||No Preference",[]
AppML Reference,AppML Reference,https://www.w3schools.com/appml/appml_reference.asp,"AppML messages are explained in the chapter aboutAppML messages.|||You have to be logged in as a member of the ""admin"" group, to access this application:|||You can add your own private data to the model.|||This example suggests restrictions to data:|||Model data can be used by server applications, and by your AppML controller.|||This example uses model data to validate input:",,,,"appml-controller|||Defines an AppML controller|||AppML Controllers&&&appml-data|||Defines the data source for an application|||AppML Data&&&appml-include-html|||Defines HTML to be included|||AppML Includes&&&appml-repeat|||Defines an HTML element to be repeated|||AppML Howto$$$&&&ready|||After AppML is initiated, and ready to load data.&&&loaded|||After AppML is fully loaded, ready to display data.&&&display|||Before AppML displays a data item.&&&done|||After AppML is done (finished displaying).&&&submit|||Before AppML submits data.&&&error|||After AppML has encountered an error.$$$""data""|||Defines a flat file source for the model&&&""database""|||Defines a database source for the model&&&""filteritems""|||Defines filter restrictions&&&""rowsperpage""|||Defines number of rows to be fetched per page&&&""security""|||Defines the security for the model&&&""sortitems""|||Defines sorting restrictions","[['\n    <div appml-include-html=""inc_header.htm""></div>', '<h1>Customers</h1>', '<table \n    appml-data=""customers.js"" appml-controller=""myController"">', '\xa0 <tr>', '\xa0\xa0\xa0 \n    <th>Customer</th>', '\xa0\xa0\xa0 <th>City</th>', '\xa0\xa0\xa0 \n    <th>Country</th>', '\xa0 </tr>', '\xa0 <tr appml-repeat=""records"">', '\xa0\xa0\xa0 \n    <td>{{CustomerName}}</td>', '\xa0\xa0\xa0 <td>{{City}}</td>', '\xa0\xa0\xa0 \n    <td>{{Country}}</td>', '\xa0 </tr>', '</table>', '\n    <div appml-include-html=""inc_footer.htm""></div>\n']]"
AppML Reference,AppML Datafiles,https://www.w3schools.com/appml/appml_ref_files.asp,"The ""data"" property defines a data file as the data source. It has the following sub properties:|||This model fetches records containing Title, Artist, and Price (as item 1, 2, and 5) from a comma separated text file: |||Example explained: Case Text Files.|||This model fetches records containing Title, Artist, and Price from CD nodes in an XML file: |||Example explained: Case XML Files.|||This model fetches records containing Title, Artist, and Price from an array of CD objects in a JSON file: |||Example explained: Case JSON Files.",,,,"""type""|||The type of data file (""csvfile"", ""xmlfile"", or ""jsonfile"") &&&""filename""|||The name of the file &&&""record""|||The name of the XML data node (if xmlfile)&&&""items""|||The data items",[]
AppML Reference,AppML Databases,https://www.w3schools.com/appml/appml_ref_databases.asp,"The ""database"" property defines a database as the data source. It has the following sub properties:|||This model fetches records containing Customer, City, and Country from a Customer table in an SQL database:|||To allow users to filter data, you can add filter information to the model:|||To allow users to sort data, you can add sort information to the model:|||To allow users to update data, you can include update information in the model:  |||By default, AppML will let you filter, sort, or update data, only it is specified in the model.|||Database connections are defined in appml_config.php:|||The configuration file can contain many database connections.|||Since AppML allows you to execute SQL statements before the application is started, you can use this to create a database if needed:|||Perfect for rapid prototyping!",,,,"""connection""|||The name of a database connection&&&""execute""|||Array of SQL statements to be executed before data retrieval (optional) &&&""keyfield""|||The key field for the main table (optional)&&&""maintable""|||The main table for this application (optional)&&&""orderby""|||A fixed SQL orderby clause for the application (optional)&&&""sql""|||The SQL statement for retrieving data",[]
AppML Reference,AppML API,https://www.w3schools.com/appml/appml_ref_api.asp,,,,,"new AppML()|||Creates a new AppML object&&&appml(""name"")|||Returns the appml object with the specified name&&&displayMessage(text)|||Displays a specified message&&&getData()|||Fetches application data&&&run()|||Runs an application object&&&setError(no, description)|||Sets a specified error and error description$$$&&&appName|||Application name (the container id)&&&container|||Application container element&&&controller|||Application controller&&&data|||Application data object&&&dataSource|||Application data source&&&displayType|||Application type (""form"" or ""list"")&&&message|||Application message object&&&error|||Application error object$$$&&&data.model|||Application data model&&&data.records|||Application records (data)$$$&&&newRecord()|||Reset the current form&&&saveRecord()|||Save the current record&&&deleteRecord()|||Delete the current record&&&closeForm()|||Close current form$$$orderBys|||Array of order by field names&&&orderByDirections|||Array of order by directions&&&queryFields|||Array of query field names&&&queryValues|||Array of query values&&&queryTypes|||Array of query types",[]
AppML Reference,AppML Architecture,https://www.w3schools.com/appml/appml_architecture.asp,"AppML combines the most up-to-date techniques and ideas of modern web development.|||AppML focus on speed, simplicity, and low cost:||| |||AppML uses an MVC Architecture|||MVC stands for Model, View, Controller|||The Model describes your application.|||The View displays your data.|||The Controller controls your application (of course).||| |||Wikipedia:Model, View, Controller|||The model describes the application.|||The model is reusable on different hardware and software platforms (Server, PC, iPhone, Tablets, etc.).|||The model is not concerned with presentation or user interface (UI).|||The model is written in JSON:|||The view is the UI (User Interface) for displaying (and input) data.|||The view is written in HTML and CSS:|||A client script in the web page can control the application:|||A server script can control the application by:|||Keeping application size and complexity low, is the main problem of all programming. |||Controlling computer application complexity, is the true art of programming.|||Software development often breaks deadlines and budgets. Finished software is often full of coding errors. This is because computer code is difficult to develop, test, and maintain.|||Coding is Out. You should describe more What to do, less How to do it.|||With AppML you Declare your application in theModel and in theView.|||With AppML there is less (sometimes nothing) to code.|||Wikipedia:Declarative Programming|||Controlling computer application complexity is the true art of programming.|||Keeping application size and complexity under under control is the main problem of all programming. |||RAD is a software development method that uses minimal planning in favor of rapid prototyping.|||AppML delivers super-fast prototyping, up to 100 times faster than traditional development methods.|||Application prototypes can run directly from the application model, without any coding.|||Wikipedia: Rapid Application Development|||Agile software development is a method based on step-by-step development, where solutions are created by users and developers in collaboration.|||With AppML, applications can be written step by step, in small increments, from prototypes to full applications.|||Wikipedia: Agile Software Development|||A web application can be developed in two different ways:|||1. Code First: Using pre-programmed, pre-tested code, adding only new application descriptions.|||2. Contract First: Coding the application from scratch using the full application requirement description.|||AppML uses the most rational concept: Code First.|||Service Oriented Architecture (SOA) is an architecture for building web applications.|||SOA offers low development costs and high flexibility.|||With SOA, applications can be created from scratch, or from existing IT infrastructures, and be used, by different applications, on different hardware and software.|||SOA is a perfect fit for MVC and Declarative Programming, where data can be easily consumed without the concern about how. |||A Web Service is an interface to data, identified by a URL, just like a web page.|||A Web Service differs from a web page, only in the way it communicates information. |||A typical Web Service only provides data to a web page.|||With AppML, HTML is the user interface, a Web Service provides the data.|||Original Web Services were designed to use XML standards like SOAP, WSDL, and UDDI.|||Modern Web Services like AppML are much easier to use. |||Example: A small program designed to supply other applications with the stock exchange prices.|||Example: Flight schedules and ticket reservation systems.|||Since web services use HTTP, they are independent of both operating systems and programming languages.|||Cloud Computing is an extension of SOA: Application-as-a service, Storage-as-a-service, Data-as-a-service.|||For most people, Cloud Computing is about storing data on the web:|||The reasons are pretty obvious:|||With AppML, it is very easy to put both databases and applications in the cloud.",Benefits of Web Services,"Low Cost@@@Rapid and Agile Web Develoment@@@Optimized for Cloud Computing@@@High Speed and Low Bandwidth Consumption@@@MVC (Model Viev Controller) Architecture@@@Full Separation of Content from Presentation @@@Highly Scalable and Testable@@@Easy Configuration and Reconfiguration@@@Reconfiguration while applications are running@@@Smart Support for User Accounts and Roles|||AppML can display data as defined in the model@@@AppML can display data as defined by HTML attributes.@@@AppML applications can run independent of HTML (hidden)@@@(Optionally) AppML can request model data from a web server (SQL     server)@@@(Optionally) AppML users can edit data@@@(Optionally) AppML can send data to a web server|||Receiving requests from the client (browser)@@@Returning data to the client@@@Receiving data from the client@@@Updating data on the server@@@Taking care of authentication and security|||Simpler to understand - Can be read by humans@@@Lightweight - no unnecessary code or markup@@@Easy to implement - no development tools required|||Web services are small units of code@@@Web services are designed to handle a limited set of tasks@@@Web services use HTTP based communicating protocols@@@Web services are independent of operating systems@@@Web services are independent of programming languages@@@Web services can connect different applications, systems, and devices@@@Web Services makes it easy to distribute information@@@Web Services favors rapid application development|||Emails and calendars@@@Documents and spreadsheets@@@Books, notes, and to do lists@@@Music, pictures and movies@@@Databases and applications|||To have access to data from everywhere@@@To share my data with others@@@To survive hardware changes or crashes ",,,"[['\n<!DOCTYPE html>', '<html lang=""en-US"">', '\n<title>Customers</title>', '\n<link rel=""stylesheet"" href=""https://www.w3schools.com/w3css/4/w3.css"">', '\n<script src=""https://www.w3schools.com/appml/2.0.3/appml.js""></script>', '\n<body>', '\n', '\n<div class=""w3-container"" appml-data=""local?model=model_customers"">', '\n<h1>Customers</h1>', '\n<div appml-include-html=""inc_listcommands.htm""></div>', '\n<div appml-include-html=""inc_filter.htm""></div>', '\n<table class=""w3-table-all"">', '\n\xa0 <tr>', '\n\xa0\xa0\xa0 <th>Customer</th>', '\n\xa0\xa0\xa0 <th>City</th>', '\n\xa0\xa0\xa0 <th>Country</th>', '\n\xa0 </tr>', '\n\xa0 <tr appml-repeat=""records"">', '\n\xa0\xa0\xa0 <td>{{CustomerName}}</td>', '\n\xa0\xa0\xa0 <td>{{City}}</td>', '\n\xa0\xa0\xa0 <td>{{Country}}</td>', '\n</tr>', '\n</table>', '\n</div>', '\n', '\n</body>', '\n</html>']]"
AppML Reference,AppML History,https://www.w3schools.com/appml/appml_history.asp,"In 1999 Refsnes Data developed the first version of AppML.|||Already then,  AppML was based on HTTP request communication between web client and the web server. Later this method became well known as AJAX.|||In September 2000, a development project for a large Norwegian customer was started. The goal of the project was to convert a huge information system (about 300 applications) from a Windows desktop application to a modern Internet application, using only AppML.The AppML-based system was launched in 2001, several months before schedule, as the world's first commercial AJAX application. The project was a huge success, with development time reduced by 75% compared to ordinary web development. Since then, new applications have been added, and the system now covers over 1000 running applications.In February 2015, W3Schools re-launched AppML as a new product, open to the public.AppML design goals:AppML applications must run over the InternetAppML applications must be platform independentAppML applications must use Internet standards only (HTML, CSS,     JavaScript)AppML applications must support a variety of application needsAppML applications must be self-describingAppML applications must be easy to develop, maintain and changeAppML applications must be future proofThe paragraphs below describes Refsnes Data's original visions (1999) about future web applications.Executables Will Die, JavaScript Will LiveCompiled executables (compiled from languages like C or Java) cannot run on different hardware.Executables (EXE files, ActiveX and COM objects, DLL-files) are components that prevent the development of applications that can run over the internet.Future application will not use, or rely on, executables or any other components installed on the client's computer.Our suggestions:Write your future applications using only HTML, CSS and JavaScript.Make sure your future applications run in any web browser. Web Applications Will be Internet ServicesThe history is full of large, purpose built, applications. Many of these died very quickly, because they could not survive requirements changes.Applications should be flexible, generalized, and gracefully adjust to changes, without being crumbled or destroyed.Applications should be able to scale from supporting a few to millions ofrequests per day.Applications should be able to spread from one server tomany, or to move between servers, without breaking theapplication.Applications should be able to cooperate with other applications.Applications should not contain large masses of code.Applications should be broken down into smaller services, that are easy to create and easy to maintain.Applications should be a set of Internet servicesthat can return data to submitted Internet requests.Applications should request services via standard Internet protocols without maintaining a permanent connection to the server. Our suggestions:Write your future applications using Internet based SOA (Service Oriented Architecture).Make your application services general and flexible, and ready to serve different types of requests. Future Applications Will be Easy to Create and EditClients and servers will exchange data in an easy understandable way.Applications will not be coded, if it can be avoided. Applications will be created and modified, by editing models, not by editing code.Application descriptions will be readable by humans.Application descriptions will be self describing.Applications will be written by users, not programmers.Our suggestions: Use human readable textfiles to describe services, and provide services by executing these descriptions.Use text files (like JSON files) to describe applications.Use text files (like JSON files) to exchange data.Use HTML, CSS, and JavaScript to execute applications.Three Little Web Developers...Once upon a time there were three little web developers developing a new web site. 1. The first web developer was using AppML.2. The second web developer was using his favorite server programming language.3. The third was using a professional enterprise web development framework.The first web developer had a demo up and running in two days. After collaboration with the users, an exiting prototype was ready in a week. And after two weeks of testing, an intelligent, fast and easy to use, web site, was ready to publish.The second web developer had his web site ready after 6 months. But the WWW had changed its requirements, and was not satisfied. The web developer could not make major changes to his project because it contained too much code. So he started the development of version 2.The third web developer never managed to complete his work. The professional web development framework was very difficult to use, very hard to understand, and almost impossible to test. Take a look at how the first developer did it.❮ PreviousNext ❯|||The AppML-based system was launched in 2001, several months before schedule, as the world's first commercial AJAX application. The project was a huge success, with development time reduced by 75% compared to ordinary web development. Since then, new applications have been added, and the system now covers over 1000 running applications.|||In February 2015, W3Schools re-launched AppML as a new product, open to the public.|||AppML design goals:|||The paragraphs below describes Refsnes Data's original visions (1999) about future web applications.|||Compiled executables (compiled from languages like C or Java) cannot run on different hardware.|||Executables (EXE files, ActiveX and COM objects, DLL-files) are components that prevent the development of applications that can run over the internet.|||Future application will not use, or rely on, executables or any other components installed on the client's computer.|||Our suggestions:|||Write your future applications using only HTML, CSS and JavaScript.|||Make sure your future applications run in any web browser. |||The history is full of large, purpose built, applications. Many of these died very quickly, because they could not survive requirements changes.|||Applications should be flexible, generalized, and gracefully adjust to changes, without being crumbled or destroyed.|||Applications should be able to scale from supporting a few to millions ofrequests per day.|||Applications should be able to spread from one server tomany, or to move between servers, without breaking theapplication.|||Applications should be able to cooperate with other applications.|||Applications should not contain large masses of code.|||Applications should be broken down into smaller services, that are easy to create and easy to maintain.|||Applications should be a set of Internet servicesthat can return data to submitted Internet requests.|||Applications should request services via standard Internet protocols without maintaining a permanent connection to the server. |||Our suggestions:|||Write your future applications using Internet based SOA (Service Oriented Architecture).|||Make your application services general and flexible, and ready to serve different types of requests.|||Clients and servers will exchange data in an easy understandable way.|||Applications will not be coded, if it can be avoided. |||Applications will be created and modified, by editing models, not by editing code.|||Application descriptions will be readable by humans.|||Application descriptions will be self describing.|||Applications will be written by users, not programmers.|||Our suggestions: |||Use human readable textfiles to describe services, and provide services by executing these descriptions.|||Use text files (like JSON files) to describe applications.|||Use text files (like JSON files) to exchange data.|||Use HTML, CSS, and JavaScript to execute applications.|||Once upon a time there were three little web developers developing a new web site. |||1. The first web developer was using AppML.|||2. The second web developer was using his favorite server programming language.|||3. The third was using a professional enterprise web development framework.|||The first web developer had a demo up and running in two days. After collaboration with the users, an exiting prototype was ready in a week. And after two weeks of testing, an intelligent, fast and easy to use, web site, was ready to publish.|||The second web developer had his web site ready after 6 months. But the WWW had changed its requirements, and was not satisfied. The web developer could not make major changes to his project because it contained too much code. So he started the development of version 2.|||The third web developer never managed to complete his work. The professional web development framework was very difficult to use, very hard to understand, and almost impossible to test. |||Take a look at how the first developer did it.",Web Applications Will be Internet Services,"AppML applications must run over the Internet@@@AppML applications must be platform independent@@@AppML applications must use Internet standards only (HTML, CSS,     JavaScript)@@@AppML applications must support a variety of application needs@@@AppML applications must be self-describing@@@AppML applications must be easy to develop, maintain and change@@@AppML applications must be future proof",,,[]
